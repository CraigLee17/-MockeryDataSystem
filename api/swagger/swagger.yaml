swagger: "2.0"
info:
  description: "This is an web app to generate mock data."
  version: "1.0.0"
  title: "Mockery Data System"
host: "localhost:3000"
basePath: "/mockdata/api/v1"
schemes:
- "http"
paths:
  /user:
    get:
      tags:
      - "user"
      summary: "Get user by user name"
      description: ""
      operationId: "getUserByName"
      produces:
      - "application/json"
      parameters:
      - name: "csrf_token"
        in: "header"
        description: "The verification for a single user in a single session"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        403:
          description: "Invalid csrf_token supplied"
        404:
          description: "User not found"
  /user/login:
    post:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
        - in: body
          name: user
          description: The user to login.
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
          headers:
            csrf_token:
              type: "string"
              description: "csrf token"
        400:
          description: "Invalid username/password supplied"
        403:
          description: "Account is disabled"
  /user/logout:
    post:
      tags:
      - "user"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful logout"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "string"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      role:
        type: "string"
      status:
        type: "boolean"
    xml:
      name: "User"