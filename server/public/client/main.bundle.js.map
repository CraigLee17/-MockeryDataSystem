{"version":3,"sources":["D:/webStormSrc/mockeryData/client/src/$_lazy_route_resource lazy","D:/webStormSrc/mockeryData/client/src/app/_models/field.ts","D:/webStormSrc/mockeryData/client/src/app/_service/AuthGuardService.ts","D:/webStormSrc/mockeryData/client/src/app/_service/authentication.service.ts","D:/webStormSrc/mockeryData/client/src/app/_service/data.type.service.ts","D:/webStormSrc/mockeryData/client/src/app/_service/index.ts","D:/webStormSrc/mockeryData/client/src/app/_service/schema.service.ts","D:/webStormSrc/mockeryData/client/src/app/_service/session.service.ts","D:/webStormSrc/mockeryData/client/src/app/_service/user.service.ts","D:/webStormSrc/mockeryData/client/src/app/_service/visitor.service.ts","D:/webStormSrc/mockeryData/client/src/app/app.component.css","D:/webStormSrc/mockeryData/client/src/app/app.component.html","D:/webStormSrc/mockeryData/client/src/app/app.component.ts","D:/webStormSrc/mockeryData/client/src/app/app.module.ts","D:/webStormSrc/mockeryData/client/src/app/create-schema/create-schema.component.css","D:/webStormSrc/mockeryData/client/src/app/create-schema/create-schema.component.html","D:/webStormSrc/mockeryData/client/src/app/create-schema/create-schema.component.ts","D:/webStormSrc/mockeryData/client/src/app/formula-syntax/formula-syntax.component.css","D:/webStormSrc/mockeryData/client/src/app/formula-syntax/formula-syntax.component.html","D:/webStormSrc/mockeryData/client/src/app/formula-syntax/formula-syntax.component.ts","D:/webStormSrc/mockeryData/client/src/app/home/home.component.css","D:/webStormSrc/mockeryData/client/src/app/home/home.component.html","D:/webStormSrc/mockeryData/client/src/app/home/home.component.ts","D:/webStormSrc/mockeryData/client/src/app/login/login.component.css","D:/webStormSrc/mockeryData/client/src/app/login/login.component.html","D:/webStormSrc/mockeryData/client/src/app/login/login.component.ts","D:/webStormSrc/mockeryData/client/src/app/logout/logout.component.css","D:/webStormSrc/mockeryData/client/src/app/logout/logout.component.ts","D:/webStormSrc/mockeryData/client/src/app/not-found/not-found.component.css","D:/webStormSrc/mockeryData/client/src/app/not-found/not-found.component.html","D:/webStormSrc/mockeryData/client/src/app/not-found/not-found.component.ts","D:/webStormSrc/mockeryData/client/src/app/profile/profile.component.css","D:/webStormSrc/mockeryData/client/src/app/profile/profile.component.html","D:/webStormSrc/mockeryData/client/src/app/profile/profile.component.ts","D:/webStormSrc/mockeryData/client/src/app/register/register.component.css","D:/webStormSrc/mockeryData/client/src/app/register/register.component.html","D:/webStormSrc/mockeryData/client/src/app/register/register.component.ts","D:/webStormSrc/mockeryData/client/src/app/routing.module.ts","D:/webStormSrc/mockeryData/client/src/app/schema-details/schema-details.component.css","D:/webStormSrc/mockeryData/client/src/app/schema-details/schema-details.component.html","D:/webStormSrc/mockeryData/client/src/app/schema-details/schema-details.component.ts","D:/webStormSrc/mockeryData/client/src/app/schema-list/schema-list.component.css","D:/webStormSrc/mockeryData/client/src/app/schema-list/schema-list.component.html","D:/webStormSrc/mockeryData/client/src/app/schema-list/schema-list.component.ts","D:/webStormSrc/mockeryData/client/src/app/update-schema/update-schema.component.css","D:/webStormSrc/mockeryData/client/src/app/update-schema/update-schema.component.html","D:/webStormSrc/mockeryData/client/src/app/update-schema/update-schema.component.ts","D:/webStormSrc/mockeryData/client/src/app/user-details/user-details.component.css","D:/webStormSrc/mockeryData/client/src/app/user-details/user-details.component.html","D:/webStormSrc/mockeryData/client/src/app/user-details/user-details.component.ts","D:/webStormSrc/mockeryData/client/src/app/users/users.component.css","D:/webStormSrc/mockeryData/client/src/app/users/users.component.html","D:/webStormSrc/mockeryData/client/src/app/users/users.component.ts","D:/webStormSrc/mockeryData/client/src/environments/environment.ts","D:/webStormSrc/mockeryData/client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import {FormBuilder, Validators} from \"@angular/forms\";\r\n\r\nexport class Field {\r\n  constructor(private fieldName, private dateTypeName, private _id, private option, private blank, private fb: FormBuilder) {\r\n  }\r\n\r\n  buildField() {\r\n    return this.fb.group({\r\n      name: [this.fieldName, Validators.required],\r\n      dataType: this.fb.group({\r\n        name: [this.dateTypeName, Validators.required],\r\n        _id: [this._id, Validators.required]\r\n      }),\r\n      option: this.option,\r\n      blank: [this.blank, [Validators.required, Validators.pattern('^([0-9]|([1-9][0-9])|100)$')]]\r\n    })\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/_models/field.ts","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport {SessionService} from \"./session.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(private sessionService: SessionService, private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.sessionService.isAuthenticated()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/_service/AuthGuardService.ts","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport 'rxjs/add/operator/map';\r\nimport {User} from \"../_models/user\";\r\nimport {SessionService} from \"./session.service\";\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n  constructor(private http: HttpClient, private sessionService: SessionService) {}\r\n\r\n  login(user: User) {\r\n    return this.http.post<User>('/mockdata/api/v1/login', user);\r\n  }\r\n\r\n  logout() {\r\n   return this.http.get('/mockdata/api/v1/logout');\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return this.sessionService.getUser();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/_service/authentication.service.ts","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {DataType} from \"../_models/data.type\";\r\n\r\n@Injectable()\r\nexport class DataTypeService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllDataTypes() {\r\n    return this.http.get<[DataType]>('/mockdata/api/v1/types');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/_service/data.type.service.ts","export * from './authentication.service';\r\nexport * from './user.service';\r\nexport * from './session.service';\r\nexport * from './data.type.service';\r\nexport * from './schema.service';\r\nexport * from './visitor.service';\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/_service/index.ts","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {SessionService} from \"./session.service\";\r\nimport {Schema} from \"../_models/schema\";\r\nimport {MockData} from \"../_models/mock.data\";\r\n\r\n@Injectable()\r\nexport class SchemaService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getSchemasByUserId(id) {\r\n    return this.http.get<[Schema]>(`/mockdata/api/v1/users/${id}/schemas`);\r\n  }\r\n\r\n  getSchemaById(id) {\r\n    return this.http.get<Schema>(`/mockdata/api/v1/schemas/${id}`);\r\n  }\r\n\r\n  create(schema: Schema) {\r\n    return this.http.post(`/mockdata/api/v1/schemas`, schema);\r\n  }\r\n\r\n  remove(id) {\r\n    return this.http.delete(`/mockdata/api/v1/schemas/${id}`);\r\n  }\r\n\r\n  update(schema) {\r\n    return this.http.put(`/mockdata/api/v1/schemas/${schema.id}`, schema);\r\n  }\r\n\r\n  previewBySchemaId(id) {\r\n    return this.http.get<MockData>(`/mockdata/api/v1/schemas/${id}/preview`);\r\n  }\r\n\r\n  checkIfGenerate(id) {\r\n    return this.http.get<boolean>(`/mockdata/api/v1/schemas/${id}/exist`);\r\n  }\r\n\r\n  generateMockData(id) {\r\n    return this.http.get(`/mockdata/api/v1/schemas/${id}/generate`);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/_service/schema.service.ts","import {Injectable} from \"@angular/core\"\r\nimport {User} from \"../_models/user\";\r\n\r\n@Injectable()\r\nexport class SessionService {\r\n\r\n  create(user: User) {\r\n    sessionStorage.user = JSON.stringify(user);\r\n  }\r\n\r\n  destory() {\r\n    delete sessionStorage.user;\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return sessionStorage.user && true;\r\n  }\r\n\r\n  getUser() {\r\n    if (sessionStorage.user) {\r\n      return JSON.parse(sessionStorage.user);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  isLogin() {\r\n    const user = this.getUser();\r\n    return user ? true : false;\r\n  }\r\n\r\n  hasRole(role) {\r\n    const user = this.getUser();\r\n    return user && user.role === role ? true : false;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/_service/session.service.ts","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {User} from '../_models/index';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  create(user: User) {\r\n    return this.http.post(`/mockdata/api/v1/users`, user);\r\n  }\r\n\r\n  getAllUsers() {\r\n    return this.http.get<[User]>(`/mockdata/api/v1/users`);\r\n  }\r\n\r\n  getUserById(id: String) {\r\n    return this.http.get<User>(`/mockdata/api/v1/users/${id}`);\r\n  }\r\n\r\n  updateUserStatus(id: String, status: Boolean) {\r\n    return this.http.put<User>(`/mockdata/api/v1/users/${id}/status`, {status: status});\r\n  }\r\n\r\n  updateUserRole(id: String, role: String) {\r\n    return this.http.put<User>(`/mockdata/api/v1/users/${id}/role`, {role: role});\r\n  }\r\n\r\n  updateUser(id: String, user: User) {\r\n    return this.http.put<User>(`/mockdata/api/v1/users/${id}`, user);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/_service/user.service.ts","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class VisitorService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  preview() {\r\n    return this.http.get('/mockdata/api/v1/visitor/preview');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/_service/visitor.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#userDropdown {\\r\\n  cursor: pointer !important;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">\\r\\n      <img src=\\\"../favicon.ico\\\" width=\\\"30\\\" height=\\\"30\\\" class=\\\"d-inline-block align-top\\\">\\r\\n    </a>\\r\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">\\r\\n      MOCKERY DATA\\r\\n    </a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\r\\n      <ul class=\\\"nav navbar-nav ml-auto\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">\\r\\n            HOME</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"users\\\" *ngIf=\\\"sessionService.hasRole('admin')\\\">\\r\\n            USERS\\r\\n          </a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"schemas\\\" *ngIf=\\\"sessionService.isLogin() && sessionService.hasRole('user')\\\">\\r\\n            SCHEMAS\\r\\n          </a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"sessionService.isLogin()\\\">\\r\\n          <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"userDropdown\\\"\\r\\n             data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\r\\n            HI, {{sessionService.getUser().username | uppercase}}\\r\\n          </a>\\r\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"userDropdown\\\">\\r\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"profile\\\">PROFILE</a>\\r\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"logout\\\">LOGOUT</a>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"!sessionService.isLogin()\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"login\\\">LOGIN</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"!sessionService.isLogin()\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"register\\\">REGISTER</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n<br>\\r\\n<br>\\r\\n<br>\\r\\n<div class=\\\"container mt-1\\\">\\r\\n  <ng-progress [spinner]=\\\"false\\\" [thick]=\\\"true\\\"></ng-progress>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import {Component} from '@angular/core';\r\nimport {SessionService} from \"./_service/session.service\";\r\nimport {AuthenticationService} from \"./_service/authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  sessionService: SessionService;\r\n  authenticationService: AuthenticationService;\r\n\r\n  constructor(sessionService: SessionService, authenticationService: AuthenticationService) {\r\n    this.sessionService = sessionService;\r\n    this.authenticationService = authenticationService;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {RoutingModule} from './routing.module';\r\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\r\nimport {AceEditorModule} from 'ng2-ace-editor';\r\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\r\nimport {Ng4LoadingSpinnerModule} from 'ng4-loading-spinner';\r\nimport {NgProgressModule} from '@ngx-progressbar/core';\r\nimport {NgProgressRouterModule} from '@ngx-progressbar/router';\r\n\r\nimport {AuthenticationService} from './_service/authentication.service';\r\nimport {UserService} from \"./_service/user.service\";\r\nimport {SessionService} from \"./_service/session.service\";\r\nimport {DataTypeService} from \"./_service/data.type.service\";\r\nimport {VisitorService} from \"./_service/visitor.service\";\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {LogoutComponent} from './logout/logout.component';\r\nimport {SchemaListComponent} from './schema-list/schema-list.component';\r\nimport {CreateSchemaComponent} from './create-schema/create-schema.component';\r\nimport {SchemaService} from \"./_service/schema.service\";\r\nimport {HttpClientModule, HttpClientXsrfModule} from \"@angular/common/http\";\r\nimport {SchemaDetailsComponent} from './schema-details/schema-details.component';\r\nimport {NotFoundComponent} from './not-found/not-found.component';\r\nimport {UsersComponent} from './users/users.component';\r\nimport {UserDetailsComponent} from './user-details/user-details.component';\r\nimport {UpdateSchemaComponent} from './update-schema/update-schema.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {FormulaSyntaxComponent} from './formula-syntax/formula-syntax.component';\r\nimport {AuthGuardService} from \"./_service/AuthGuardService\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    LogoutComponent,\r\n    SchemaListComponent,\r\n    CreateSchemaComponent,\r\n    SchemaDetailsComponent,\r\n    NotFoundComponent,\r\n    UsersComponent,\r\n    UserDetailsComponent,\r\n    UpdateSchemaComponent,\r\n    ProfileComponent,\r\n    FormulaSyntaxComponent\r\n  ],\r\n  imports: [\r\n    Ng4LoadingSpinnerModule.forRoot(),\r\n    NgProgressModule.forRoot(),\r\n    NgProgressRouterModule,\r\n    AceEditorModule,\r\n    BrowserModule,\r\n    RoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    // attach csrf token to post and put request\r\n    HttpClientXsrfModule.withOptions({\r\n      headerName: 'csrf-token',\r\n      cookieName: 'csrf-token'\r\n    }),\r\n    NgxDatatableModule\r\n  ],\r\n  providers: [AuthGuardService, AuthenticationService, UserService, SessionService, DataTypeService, SchemaService, VisitorService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".type-input {\\r\\n  cursor: pointer;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\ni.fa {\\r\\n  margin-top: 8px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\ni.fa-pencil {\\r\\n  color: #006b80;\\r\\n}\\r\\n\\r\\n.type {\\r\\n  float: left;\\r\\n  height: 96px;\\r\\n  width: 210px;\\r\\n  line-height: 20px;\\r\\n  padding: 8px 10px;\\r\\n  margin: 0 8px 8px 0;\\r\\n  border-radius: 5px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.type-name {\\r\\n  font-size: 16px;\\r\\n  font-weight: bold;\\r\\n  color: #444;\\r\\n  margin-bottom: 2px;\\r\\n}\\r\\n\\r\\n.type:hover {\\r\\n  background-color: #f0f0f0;\\r\\n}\\r\\n\\r\\n.type-description {\\r\\n  color: #606060;\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n.tab-content {\\r\\n  overflow: auto;\\r\\n  height: 300px;\\r\\n  width: inherit;\\r\\n}\\r\\n\\r\\n.datatable-scroll {\\r\\n  width: 100% !important;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/create-schema/create-schema.component.css\n// module id = ../../../../../src/app/create-schema/create-schema.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\" [formGroup]=\\\"createSchemaForm\\\">\\r\\n  <div class=\\\"col-md-7 col-sm-12\\\">\\r\\n    <h3><strong>New Schema</strong></h3>\\r\\n    <div class=\\\"alert-danger\\\" *ngIf=\\\"schemaError\\\">{{schemaError}}</div>\\r\\n    <div class=\\\"card\\\">\\r\\n      <table class=\\\"table table-sm table-striped\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n          <th>Field Name</th>\\r\\n          <th>Type</th>\\r\\n          <th>Blank(%)</th>\\r\\n          <th>Options</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody formArrayName=\\\"fields\\\">\\r\\n        <tr *ngFor=\\\"let field of createSchemaForm.controls.fields.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n          <td>\\r\\n            <input class=\\\"form-control\\\" formControlName=\\\"name\\\">\\r\\n          </td>\\r\\n          <td>\\r\\n            <input class=\\\"form-control type-input\\\" readonly\\r\\n                   data-toggle=\\\"modal\\\" data-target=\\\"#modal\\\"\\r\\n                   [value]=field.value.dataType.name (click)=\\\"selectedIndex = i\\\">\\r\\n          </td>\\r\\n          <td>\\r\\n            <input class=\\\"form-control\\\" formControlName=\\\"blank\\\" style=\\\"width: 60px\\\"\\r\\n                   data-toggle=\\\"popover\\\" data-trigger=\\\"focus\\\"\\r\\n                   data-content=\\\"Tip: fields with the same blank % will be blank at the same time.\\\">\\r\\n          </td>\\r\\n          <td>\\r\\n            <i class=\\\"fa fa-pencil ml-4\\\" data-toggle=\\\"modal\\\" data-target=\\\"#optionModal\\\" (click)=\\\"fillTextfield(i)\\\"></i>\\r\\n          </td>\\r\\n          <td>\\r\\n            <i class=\\\"fa fa-times\\\" (click)=\\\"removeField(i)\\\"></i>\\r\\n          </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-outline-dark col-md-5 col-sm-12\\\" (click)=\\\"addField()\\\">Add another field</button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container col-md-5\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"col-md-4 col-form-label\\\">#Rows:</label>\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"number of rows\\\" formControlName=\\\"count\\\">\\r\\n        <div class=\\\"alert alert-danger\\\"\\r\\n             *ngIf=\\\"createSchemaForm.controls['count'].dirty && createSchemaForm.controls['count'].invalid\\\">\\r\\n          Rows should be a positive integer!\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"col-md-4 col-form-label\\\">Format:</label>\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <select class=\\\"custom-select form-control\\\" formControlName=\\\"fileFormat\\\">\\r\\n          <option selected>JSON</option>\\r\\n          <option>CSV</option>\\r\\n          <option>XML</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"col-md-4 col-form-label\\\">Schema Name:</label>\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"schema name\\\" formControlName=\\\"name\\\">\\r\\n        <div class=\\\"alert alert-danger\\\"\\r\\n             *ngIf=\\\"createSchemaForm.controls['name'].dirty && createSchemaForm.controls['name'].invalid\\\">\\r\\n          Schema name is required!\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <button class=\\\"btn btn-outline-info col-sm-12 col-md-8\\\" (click)=\\\"createSchema(createSchemaForm.value)\\\"\\r\\n                [disabled]=\\\"createSchemaForm.invalid\\\">Save Schema\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"modalLabel\\\">\\r\\n          Choose a Type\\r\\n        </h5>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <ul class=\\\"nav nav-pills\\\">\\r\\n          <li class=\\\"nav-item\\\" *ngFor=\\\"let key of category; let i = index\\\">\\r\\n            <a class=\\\"nav-link text-uppercase\\\" [ngClass]=\\\"{active: i==0}\\\" data-toggle=\\\"tab\\\" href=\\\"#{{key}}\\\" role=\\\"tab\\\"\\r\\n               aria-controls=key aria-selected=\\\"true\\\">{{key}}</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n        <div class=\\\"tab-content container\\\">\\r\\n          <div class=\\\"tab-pane fade show\\\" [ngClass]=\\\"{active: i==0}\\\" id={{key}}\\r\\n               *ngFor=\\\"let key of category; let i = index\\\">\\r\\n            <div class=\\\"type\\\" *ngFor=\\\"let type of dataTypes[key]\\\" (click)=\\\"selectType(type)\\\"\\r\\n                 data-dismiss=\\\"modal\\\">\\r\\n              <div class=\\\"type-name\\\">{{type.name}}</div>\\r\\n              <div class=\\\"type-description\\\">{{type.description}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"optionModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">\\r\\n          Formula\\r\\n        </h5>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div style=\\\"font-size: 95%\\\">\\r\\n          <p>Alter the value of this field using <a routerLink=\\\"/syntax\\\" target=\\\"_blank\\\">Mockery formula syntax</a>. Use this to refer to the value of this\\r\\n            schema.</p>\\r\\n          Example: <br>\\r\\n          <p><code>this.firstname</code> => refer to the value of firstname which is defined in schema</p>\\r\\n          <p><code>faker.name.firstName()</code> => use the <a href=\\\"https://github.com/Marak/faker.js\\\" target=\\\"_blank\\\">faker</a>\\r\\n            generator to generate random first name</p>\\r\\n          <p><code>chance.first()</code> => use the <a href=\\\"https://github.com/chancejs/chancejs\\\" target=\\\"_blank\\\">chance</a>\\r\\n            generator to generate random first name</p>\\r\\n          <p><code>casual.first_name</code> => use the <a href=\\\"https://github.com/boo1ean/casual\\\" target=\\\"_blank\\\">casual</a>\\r\\n            generator to generate random first name</p>\\r\\n        </div>\\r\\n        <div class=\\\"container\\\">\\r\\n          <ace-editor [theme]=\\\"'tomorrow'\\\" style=\\\"min-height: 100px; width:100%; overflow: auto;\\\" [mode]=\\\"'javascript'\\\"\\r\\n                      class=\\\"form-control\\\" columns=\\\"60\\\" placeholder=\\\"example: upper(this)\\\" rows=\\\"4\\\" spellcheck=\\\"false\\\"\\r\\n                      [(ngModel)]=\\\"textfield\\\">\\r\\n          </ace-editor>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"applyOption()\\\">Apply</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/create-schema/create-schema.component.html\n// module id = ../../../../../src/app/create-schema/create-schema.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {DataTypeService} from \"../_service/data.type.service\";\r\nimport {FormGroup, Validators, FormArray, FormBuilder} from '@angular/forms';\r\nimport {DataType} from \"../_models/data.type\";\r\nimport {SchemaService} from \"../_service/schema.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {SessionService} from \"../_service/session.service\";\r\n\r\nimport 'brace';\r\nimport 'brace/theme/tomorrow';\r\nimport {Field} from \"../_models/field\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-schema',\r\n  templateUrl: './create-schema.component.html',\r\n  styleUrls: ['./create-schema.component.css']\r\n})\r\nexport class CreateSchemaComponent implements OnInit {\r\n  dataTypes = {};\r\n  createSchemaForm: FormGroup;\r\n  selectedIndex;\r\n  textfield = '';\r\n  category = [\"address\", \"company\", \"date\", \"finance\", \"internet\", \"name\", \"phone\", \"random\", \"system\"];\r\n  schemaError;\r\n\r\n\r\n  constructor(private sessionService: SessionService,\r\n              private fb: FormBuilder, private dataTypeService: DataTypeService,\r\n              private schemaService: SchemaService, private router: Router) {\r\n    this.dataTypeService.getAllDataTypes().subscribe(dataTypes => this.categorizeTypes(dataTypes));\r\n  }\r\n\r\n  categorizeTypes(dataTypes) {\r\n    for (let index in this.category) {\r\n      var kind = this.category[index];\r\n      this.dataTypes[kind] = dataTypes.filter(type => type.name.startsWith(kind)).map(\r\n        type => {\r\n          type.name = type.name.substring(type.name.indexOf('.') + 1).replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase());\r\n          return type;\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createSchemaForm = this.buildForm();\r\n\r\n  }\r\n\r\n  buildField() {\r\n    const fields = <FormArray>this.createSchemaForm.controls['fields'];\r\n    const lastOne = <FormGroup>fields.controls[fields.length - 1];\r\n    return this.fb.group(lastOne.controls);\r\n  }\r\n\r\n  buildFields() {\r\n    const fields = [{\r\n      name: 'firstName',\r\n      dataType: {\r\n        name: 'firstName',\r\n        _id: '59eabbc83bb4472dcc1f6c1a'\r\n      },\r\n      option: '',\r\n      blank: 0\r\n    }, {\r\n      name: 'lastName',\r\n      dataType: {\r\n        name: 'lastName',\r\n        _id: '59eabbc83bb4472dcc1f6c1b'\r\n      },\r\n      option: '',\r\n      blank: 0\r\n    }, {\r\n      name: 'email',\r\n      dataType: {\r\n        name: 'email',\r\n        _id: '59eabbc83bb4472dcc1f6c12'\r\n      },\r\n      option: '',\r\n      blank: 0\r\n    }, {\r\n      name: 'country',\r\n      dataType: {\r\n        name: 'country',\r\n        _id: '59eabbc83bb4472dcc1f6bf8'\r\n      },\r\n      option: '',\r\n      blank: 0\r\n    }, {\r\n      name: 'date',\r\n      dataType: {\r\n        name: 'past',\r\n        _id: '59eabbc83bb4472dcc1f6c02'\r\n      },\r\n      option: '',\r\n      blank: 0\r\n    }];\r\n    const fieldGroup = fields.map(\r\n      field => new Field(field.name, field.dataType.name, field.dataType._id, field.option, field.blank, this.fb).buildField()\r\n    );\r\n    return this.fb.array(fieldGroup);\r\n  }\r\n\r\n  buildForm() {\r\n    return this.fb.group({\r\n      name: ['', Validators.required],\r\n      count: ['', [Validators.required, Validators.pattern('^[1-9]+[0-9]*$')]],\r\n      fileFormat: ['', Validators.required],\r\n      fields: this.buildFields()\r\n    });\r\n  }\r\n\r\n  removeField(index) {\r\n    const fields = <FormArray>this.createSchemaForm.controls['fields'];\r\n    if (fields.length == 1) {\r\n      alert(\"The schema should have one field at least!\");\r\n    } else {\r\n      fields.removeAt(index);\r\n    }\r\n  }\r\n\r\n  addField() {\r\n    const fields = <FormArray>this.createSchemaForm.controls['fields'];\r\n    const lastField = this.buildField();\r\n    const newField = new Field(\"New\" + lastField.value.name, lastField.value.dataType.name, lastField.value.dataType._id, '', 0, this.fb).buildField();\r\n    fields.push(newField);\r\n  }\r\n\r\n  applyOption() {\r\n    const fields = <FormArray>this.createSchemaForm.controls['fields'];\r\n    fields.controls[this.selectedIndex].patchValue({option: this.textfield});\r\n    fields.controls[this.selectedIndex].patchValue({\r\n      dataType: {\r\n        _id: \"5a2b5ca6bbeb612e307415f7\",\r\n        name: \"self-defined\"\r\n      }\r\n    });\r\n  }\r\n\r\n  selectType(type: DataType) {\r\n    const fields = <FormArray>this.createSchemaForm.controls['fields'];\r\n    fields.controls[this.selectedIndex].patchValue({dataType: type});\r\n  }\r\n\r\n  fillTextfield(index) {\r\n    this.selectedIndex = index;\r\n    const fields = <FormArray>this.createSchemaForm.controls['fields'];\r\n    this.textfield = fields.controls[index].value.option;\r\n  }\r\n\r\n  createSchema(newSchema) {\r\n    // Check if same name occurs in different column\r\n    if (!this.checkFieldName(newSchema.fields)) return;\r\n    this.schemaService.create(newSchema).subscribe(\r\n      data => this.router.navigate(['/user', this.sessionService.getUser().id, 'schemas']),\r\n      error => this.schemaError = error.error.text\r\n    );\r\n  }\r\n\r\n  checkFieldName(fields) {\r\n    const set = new Set();\r\n    for (let i in fields) {\r\n      if (set.has(fields[i].name)) {\r\n        this.schemaError = \"Different field cannot have the same name!\";\r\n        return false;\r\n      }\r\n      set.add(fields[i].name);\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/create-schema/create-schema.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/formula-syntax/formula-syntax.component.css\n// module id = ../../../../../src/app/formula-syntax/formula-syntax.component.css\n// module chunks = main","module.exports = \"<h3><strong>Formulas Syntax</strong></h3>\\n<p class=\\\"lead\\\">Formulas allow you to use Javascript code to generate data based on customized logic.</p>\\n<h4>Operators</h4>\\n<p><code>+ - * / %</code></p>\\n<h4>Logic</h4>\\n<p><code>&lt; &gt; &lt;= &gt;= == != and or</code></p>\\n<h4>Functions</h4>\\n<p>\\n  Mockery data is built on top of\\n  <a href=\\\"https://github.com/Marak/faker.js\\\" target=\\\"_blank\\\">faker</a>,\\n  <a href=\\\"https://github.com/chancejs/chancejs\\\" target=\\\"_blank\\\">chance</a> and\\n  <a href=\\\"https://github.com/boo1ean/casual\\\" target=\\\"_blank\\\">casual</a>.\\n  You can easily make use of the functions provided by these libraries.\\n</p>\\nExamples:\\n<h5>Faker</h5>\\n<p class=\\\"mb-1\\\"><code>faker.internet.email()</code></p>\\n<p class=\\\"mb-1\\\"><code>faker.company.companyName()</code></p>\\n<p class=\\\"mb-1\\\"><code>faker.date.past()</code></p>\\n<p><code>faker.image.imageUrl()</code></p>\\n<p class=\\\"mb-1\\\">Please go the <a href=\\\"https://github.com/Marak/faker.js#api-methods\\\" target=\\\"_blank\\\">Faker.js</a> to see more\\n  examples.</p>\\n<h5>Chance</h5>\\n<p class=\\\"mb-1\\\"><code>chance.address()</code></p>\\n<p class=\\\"mb-1\\\"><code>chance.age({{ '{' + \\\"type: 'child'\\\" + '}'}})</code></p>\\n<p class=\\\"mb-1\\\"><code>chance.ipv6()</code></p>\\n<p><code>chance.country()</code></p>\\n<p>Please go the <a href=\\\"http://chancejs.com\\\" target=\\\"_blank\\\">Chance.js</a> to see more examples.</p>\\n<h5>Casual</h5>\\n<p class=\\\"mb-1\\\"><code>casual.username</code></p>\\n<p class=\\\"mb-1\\\"><code>casual.rgb_hex</code></p>\\n<p class=\\\"mb-1\\\"><code>casual.domain</code></p>\\n<p><code>casual.state</code></p>\\n<p>Please go the <a href=\\\"https://github.com/boo1ean/casual#embedded-generators\\\" target=\\\"_blank\\\">Casual.js</a> to see\\n  more examples.</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/formula-syntax/formula-syntax.component.html\n// module id = ../../../../../src/app/formula-syntax/formula-syntax.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-formula-syntax',\n  templateUrl: './formula-syntax.component.html',\n  styleUrls: ['./formula-syntax.component.css']\n})\nexport class FormulaSyntaxComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/formula-syntax/formula-syntax.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"@media (min-width: 768px) {\\r\\n  .modal-xl {\\r\\n    width: 75%;\\r\\n    max-width:1200px;\\r\\n  }\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-7 col-sm-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <h6 class=\\\"card-body\\\">\\r\\n        Need some mock data to test your app?<br>\\r\\n        Mockery Data lets you generate up to 100,000 rows of realistic test data in JSON, CSV, and XML formats.\\r\\n        <div>\\r\\n          Need more data? <a [routerLink]=\\\"['/register']\\\">Sign up now!</a>\\r\\n        </div>\\r\\n      </h6>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\">\\r\\n      <table class=\\\"table table-sm table-striped\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n          <th>Field Name</th>\\r\\n          <th>Type</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <div class=\\\"form-control\\\">id</div>\\r\\n          </td>\\r\\n          <td>\\r\\n            <div class=\\\"form-control\\\">number</div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <div class=\\\"form-control\\\">firstName</div>\\r\\n          </td>\\r\\n          <td>\\r\\n            <div class=\\\"form-control\\\">firstName</div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <div class=\\\"form-control\\\">lastName</div>\\r\\n          </td>\\r\\n          <td>\\r\\n            <div class=\\\"form-control\\\">lastName</div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <div class=\\\"form-control\\\">email</div>\\r\\n          </td>\\r\\n          <td>\\r\\n            <div class=\\\"form-control\\\">email</div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <div class=\\\"form-control\\\">nationality</div>\\r\\n          </td>\\r\\n          <td>\\r\\n            <div class=\\\"form-control\\\">country</div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"container col-md-5\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"col-md-3 col-form-label\\\">#Rows:</label>\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <div class=\\\"form-control\\\">1000</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"col-md-3 col-form-label\\\">Format:</label>\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <div class=\\\"form-control\\\">JSON</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <button class=\\\"btn btn-outline-primary col-sm-12 col-md-8 mb-1\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modal\\\"\\r\\n                (click)=\\\"preview()\\\">Preview</button>\\r\\n        <a class=\\\"btn btn-outline-success col-sm-12 col-md-8 mb-1\\\"\\r\\n           href='/mockdata/api/v1/visitor/file'>Download Data</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-xl\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title text-primary\\\" id=\\\"modalLabel\\\">\\r\\n          Preview (Up to 100)\\r\\n        </h5>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body container\\\">\\r\\n        <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link active\\\" id=\\\"home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#table\\\" role=\\\"tab\\\">Table</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" id=\\\"profile-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#json\\\" role=\\\"tab\\\">Json</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n        <div class=\\\"tab-content\\\">\\r\\n          <br/>\\r\\n          <div class=\\\"tab-pane fade show active\\\" id=\\\"table\\\" role=\\\"tabpanel\\\">\\r\\n            <ngx-datatable\\r\\n              #table\\r\\n              class=\\\"material\\\"\\r\\n              [loadingIndicator]=\\\"loadingIndicator\\\"\\r\\n              [rows]=\\\"rows\\\"\\r\\n              [columns]=\\\"headers\\\"\\r\\n              [columnMode]=\\\"'force'\\\"\\r\\n              [headerHeight]=\\\"50\\\"\\r\\n              [footerHeight]=\\\"50\\\"\\r\\n              [rowHeight]=\\\"'auto'\\\"\\r\\n              [limit]=\\\"5\\\"\\r\\n              [scrollbarH]=\\\"true\\\">\\r\\n            </ngx-datatable>\\r\\n          </div>\\r\\n          <div class=\\\"tab-pane fade\\\" id=\\\"json\\\" role=\\\"tabpanel\\\" style=\\\"overflow: auto;height: 310px; width: inherit;\\\">\\r\\n            <pre *ngFor=\\\"let row of rows\\\" [innerHTML]=\\\"row | json\\\"></pre>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {VisitorService} from \"../_service/visitor.service\";\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  rows;\r\n  headers;\r\n\r\n  constructor(private visitorService: VisitorService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  preview() {\r\n    if (!this.rows) {\r\n      this.visitorService.preview().subscribe(mockData => {\r\n          this.rows = mockData;\r\n          this.buildHeaders();\r\n        },\r\n        error => console.log(error));\r\n    }\r\n  }\r\n\r\n  buildHeaders() {\r\n    const headers = [];\r\n    for (let name in this.rows[0]) {\r\n      headers.push({prop: name});\r\n    }\r\n    this.headers = headers;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/home/home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-md-4 col-md-offset-3\\\">\\r\\n  <h3><strong>Login</strong></h3>\\r\\n  <form [formGroup]=\\\"loginForm\\\">\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\r\\n      {{error}}\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"col-form-label\\\"><strong>Email:</strong></label>\\r\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"email\\\" required/>\\r\\n      <div class=\\\"alert alert-danger\\\"\\r\\n           *ngIf=\\\"loginForm.controls['email'].invalid && loginForm.controls['email'].dirty\\\">\\r\\n        <div *ngIf=\\\"loginForm.controls['email'].hasError('required')\\\">\\r\\n          Email is required!\\r\\n        </div>\\r\\n        <div\\r\\n          *ngIf=\\\"!loginForm.controls['email'].hasError('required') && loginForm.controls['email'].hasError('email')\\\">\\r\\n          Email format wrong!\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"col-form-label\\\"><strong>Password:</strong></label>\\r\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"password\\\" required/>\\r\\n      <div class=\\\"alert alert-danger\\\"\\r\\n           *ngIf=\\\"loginForm.controls['password'].invalid && loginForm.controls['password'].dirty\\\">\\r\\n        <div *ngIf=\\\"loginForm.controls['password'].hasError('required')\\\">\\r\\n          Password is required!\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button class=\\\"btn btn-primary pull-right\\\" [disabled]=\\\"!loginForm.valid\\\" (click)=\\\"login(loginForm.value)\\\">Login\\r\\n      </button>\\r\\n    </div>\\r\\n    <hr class=\\\"mt-1 mb-1\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div style=\\\"font-size:85%\\\">\\r\\n        Don't have an account!\\r\\n        <a [routerLink]=\\\"['/register']\\\">\\r\\n          Sign Up Here\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {AuthenticationService} from '../_service/index';\r\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\r\nimport {User} from \"../_models/index\";\r\nimport {Router} from \"@angular/router\";\r\nimport {SessionService} from \"../_service/session.service\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  error;\r\n\r\n  constructor(private authenticationService: AuthenticationService, private router: Router,\r\n              private sessionService: SessionService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authenticationService.logout();\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', Validators.required)\r\n    });\r\n  }\r\n\r\n  login(user: User) {\r\n    this.authenticationService.login(user)\r\n      .subscribe(\r\n        data => {\r\n          this.sessionService.create(data);\r\n          this.loginForm.reset();\r\n          this.router.navigate(['/']);\r\n        },\r\n        error => {\r\n          this.error = error.error;\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/login/login.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/logout/logout.component.css\n// module id = ../../../../../src/app/logout/logout.component.css\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {AuthenticationService} from \"../_service/authentication.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {SessionService} from \"../_service/session.service\";\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  template: '',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor(private authenticationService: AuthenticationService, private router: Router, private sessionService: SessionService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authenticationService.logout().subscribe(data => this.sessionService.destory());\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/logout/logout.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/not-found/not-found.component.css\n// module id = ../../../../../src/app/not-found/not-found.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card\\\">\\r\\n  <h4 class=\\\"card-header\\\">404 Not Found</h4>\\r\\n  <div class=\\\"card-block\\\">\\r\\n    <strong>Oops! The page you requested was not found.</strong>\\r\\n    <br>\\r\\n    <strong>Go to <a routerLink=\\\"/\\\">Homepage</a>.</strong>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/not-found/not-found.component.html\n// module id = ../../../../../src/app/not-found/not-found.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/not-found/not-found.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/profile/profile.component.css\n// module id = ../../../../../src/app/profile/profile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-md-7 col-md-offset-1\\\">\\r\\n  <div class=\\\"panel panel-default\\\">\\r\\n    <div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\"><strong>Profile</strong></h3></div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <form [formGroup]=\\\"profileForm\\\">\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"profileForm.invalid\\\">\\r\\n          <li *ngIf=\\\"profileForm.controls['firstName'].invalid\\\">\\r\\n            First name is required!\\r\\n          </li>\\r\\n          <li *ngIf=\\\"profileForm.controls['lastName'].invalid\\\">\\r\\n            Last name is required!\\r\\n          </li>\\r\\n          <li *ngIf=\\\"profileForm.controls['username'].invalid\\\">\\r\\n            Length of username should between 3 and 10!\\r\\n          </li>\\r\\n          <li *ngIf=\\\"profileForm.controls['email'].hasError('email')\\\">\\r\\n            Email format wrong!\\r\\n          </li>\\r\\n        </div>\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\r\\n          {{error}}\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"col-form-label\\\"><strong>First Name:</strong></label>\\r\\n              <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"col-form-label\\\"><strong>Last Name:</strong></label>\\r\\n              <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-form-label\\\"><strong>Username:</strong></label>\\r\\n          <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-form-label\\\"><strong>Email:</strong></label>\\r\\n          <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <button data-toggle=\\\"modal\\\" data-target=\\\"#pswModal\\\" class=\\\"form-control col-sm-6 col-md-3 btn btn-primary\\\">Change\\r\\n            Password\\r\\n          </button>\\r\\n          <button (click)=\\\"update(profileForm.value)\\\" class=\\\"pull-right btn btn-success col-sm-6 col-md-3\\\"\\r\\n                  [disabled]=\\\"profileForm.invalid\\\">\\r\\n            Update\\r\\n          </button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"pswModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">\\r\\n          Update password\\r\\n        </h5>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"psw != confirmedPsw\\\">\\r\\n            Password and confirm password are different!\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"col-form-label\\\"><strong>New password:</strong></label>\\r\\n              <input type=\\\"password\\\" [(ngModel)]=\\\"psw\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"col-form-label\\\"><strong>Confirm password:</strong></label>\\r\\n              <input type=\\\"password\\\" [(ngModel)]=\\\"confirmedPsw\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\"\\r\\n                (click)=\\\"update({password:psw})\\\" [disabled]=\\\"!(psw?.length > 0 && psw == confirmedPsw)\\\">Update\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/profile/profile.component.html\n// module id = ../../../../../src/app/profile/profile.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\r\nimport {UserService} from \"../_service/index\";\r\nimport {SessionService} from \"../_service/session.service\";\r\nimport {User} from \"../_models/user\";\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  profileForm: FormGroup;\r\n  error: String;\r\n  psw: String;\r\n  confirmedPsw: String;\r\n\r\n  constructor(private userService: UserService, private sessionService: SessionService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.profileForm = new FormGroup({\r\n      firstName: new FormControl('', [Validators.required]),\r\n      lastName: new FormControl('', [Validators.required]),\r\n      username: new FormControl('', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(10)])),\r\n      email: new FormControl('', [Validators.required, Validators.email])\r\n    });\r\n    this.profileForm.patchValue(this.sessionService.getUser());\r\n  }\r\n\r\n  update(updateUser) {\r\n    this.userService.updateUser(this.sessionService.getUser().id, updateUser)\r\n      .subscribe(\r\n        user => {\r\n          this.sessionService.create(user);\r\n          alert(\"Profile updated!\");\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          alert(error.error.text);\r\n        });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/profile/profile.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/register/register.component.css\n// module id = ../../../../../src/app/register/register.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-md-7 col-md-offset-1\\\">\\r\\n  <div class=\\\"panel panel-default\\\">\\r\\n    <div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\"><strong>Register</strong></h3></div>\\r\\n\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <form [formGroup]=\\\"registerForm\\\">\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!registerForm.hasError('clean') && registerForm.invalid\\\">\\r\\n          <li *ngIf=\\\"registerForm.controls['firstName'].dirty && registerForm.controls['firstName'].invalid\\\">\\r\\n            First name is required!\\r\\n          </li>\\r\\n          <li *ngIf=\\\"registerForm.controls['lastName'].dirty && registerForm.controls['lastName'].invalid\\\">\\r\\n            Last name is required!\\r\\n          </li>\\r\\n          <li *ngIf=\\\"registerForm.controls['username'].dirty && registerForm.controls['username'].invalid\\\">\\r\\n            Length of username should between 3 and 10!\\r\\n          </li>\\r\\n          <li *ngIf=\\\"registerForm.controls['email'].dirty && registerForm.controls['email'].hasError('email')\\\">\\r\\n            Email format wrong!\\r\\n          </li>\\r\\n          <li *ngIf=\\\"registerForm.controls['password'].dirty && registerForm.controls['password'].invalid\\\">\\r\\n            Password is required!\\r\\n          </li>\\r\\n          <li *ngIf=\\\"registerForm.controls['confirmedPassword'].dirty && registerForm.hasError('pswNotMatch')\\\">\\r\\n            Password and confirm password are different!\\r\\n          </li>\\r\\n          <li *ngIf=\\\"error\\\">\\r\\n            First name is required!\\r\\n          </li>\\r\\n        </div>\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\r\\n          {{error}}\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"col-form-label\\\"><strong>First Name:</strong></label>\\r\\n              <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"col-form-label\\\"><strong>Last Name:</strong></label>\\r\\n              <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control \\\" placeholder=\\\"Last Name\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-form-label\\\"><strong>Username:</strong></label>\\r\\n          <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control \\\" placeholder=\\\"Username\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-form-label\\\"><strong>Email:</strong></label>\\r\\n          <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control \\\" placeholder=\\\"Email Address\\\">\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"col-form-label\\\"><strong>Password:</strong></label>\\r\\n              <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control \\\" placeholder=\\\"Password\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"col-form-label\\\"><strong>Confirm password:</strong></label>\\r\\n              <input type=\\\"password\\\" formControlName=\\\"confirmedPassword\\\" class=\\\"form-control \\\"\\r\\n                     placeholder=\\\"Confirm Password\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <button (click)=\\\"register(registerForm.value)\\\" class=\\\"btn btn-primary pull-right\\\" [disabled]=\\\"registerForm.invalid\\\">\\r\\n          Register\\r\\n        </button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/register/register.component.html\n// module id = ../../../../../src/app/register/register.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\r\nimport {UserService} from \"../_service/index\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  error: string;\r\n\r\n  constructor(private userService: UserService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = new FormGroup({\r\n      firstName: new FormControl('', [Validators.required]),\r\n      lastName: new FormControl('', [Validators.required]),\r\n      username: new FormControl('', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(10)])),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', Validators.required),\r\n      confirmedPassword: new FormControl('', Validators.required)\r\n    }, this.formGroupValidator);\r\n  }\r\n\r\n  register(newUser) {\r\n    delete newUser.confirmedPassword;\r\n    this.userService.create(newUser)\r\n      .subscribe(\r\n        data => {\r\n          this.registerForm.reset();\r\n          this.router.navigate(['/login']);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.error = error.error;\r\n        });\r\n  }\r\n\r\n  formGroupValidator(formGroup: FormGroup) {\r\n    const res = {pswNotMatch: false, clean: false};\r\n    // check password equality\r\n    if (formGroup.controls['password'].value != formGroup.controls['confirmedPassword'].value) {\r\n      res.pswNotMatch = true;\r\n    }\r\n    // check if all inputs are dirty or not\r\n    for (let key in formGroup.controls) {\r\n      if (!formGroup.controls[key].dirty) {\r\n        res.clean = true;\r\n        break;\r\n      }\r\n    }\r\n    return (!res.clean && !res.pswNotMatch) ? null : res;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/register/register.component.ts","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {LogoutComponent} from \"./logout/logout.component\";\r\nimport {HomeComponent} from \"./home/home.component\";\r\nimport {SchemaListComponent} from \"./schema-list/schema-list.component\";\r\nimport {CreateSchemaComponent} from \"./create-schema/create-schema.component\";\r\nimport {SchemaDetailsComponent} from \"./schema-details/schema-details.component\";\r\nimport {NotFoundComponent} from \"./not-found/not-found.component\";\r\nimport {UsersComponent} from \"./users/users.component\";\r\nimport {UserDetailsComponent} from \"./user-details/user-details.component\";\r\nimport {UpdateSchemaComponent} from \"./update-schema/update-schema.component\";\r\nimport {ProfileComponent} from \"./profile/profile.component\";\r\nimport {FormulaSyntaxComponent} from \"./formula-syntax/formula-syntax.component\";\r\nimport {AuthGuardService} from \"./_service/AuthGuardService\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'logout', component: LogoutComponent},\r\n  {path: 'user/:id/schemas', component: SchemaListComponent, canActivate: [AuthGuardService]},\r\n  {path: 'schemas', component: SchemaListComponent, canActivate: [AuthGuardService]},\r\n  {path: 'schemas/new', component: CreateSchemaComponent, canActivate: [AuthGuardService]},\r\n  {path: 'schemas/:id/update', component: UpdateSchemaComponent, canActivate: [AuthGuardService]},\r\n  {path: 'users/:userid/schemas/:id', component: SchemaDetailsComponent, canActivate: [AuthGuardService]},\r\n  {path: 'users', component: UsersComponent, canActivate: [AuthGuardService]},\r\n  {path: 'users/:id', component: UserDetailsComponent, canActivate: [AuthGuardService]},\r\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthGuardService]},\r\n  {path: 'syntax', component: FormulaSyntaxComponent},\r\n  {path: 'notfound', component: NotFoundComponent},\r\n  // otherwise redirect to not found\r\n  {path: '**', redirectTo: 'notfound'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class RoutingModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/routing.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"@media (min-width: 768px) {\\r\\n  .modal-xl {\\r\\n    width: 75%;\\r\\n    max-width:1200px;\\r\\n  }\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/schema-details/schema-details.component.css\n// module id = ../../../../../src/app/schema-details/schema-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row col-md-12 container\\\">\\r\\n  <a routerLink=\\\"/schemas\\\" class=\\\"text-left\\\" [routerLink]=\\\"['/user', userid, 'schemas']\\\">\\r\\n    Schema List </a>&nbsp;> {{schema?.name}}\\r\\n</div>\\r\\n<ng4-loading-spinner *ngIf=\\\"spinner\\\"></ng4-loading-spinner>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-7 col-sm-12\\\">\\r\\n    <h3><strong>{{schema?.name}}</strong></h3>\\r\\n    <div class=\\\"card\\\">\\r\\n      <table class=\\\"table table-sm table-striped\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n          <th>Field Name</th>\\r\\n          <th>Type/Options</th>\\r\\n          <th>Blank(%)</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr *ngFor=\\\"let field of schema?.fields\\\">\\r\\n          <td>\\r\\n            <div class=\\\"form-control text-primary\\\">{{field?.name}}</div>\\r\\n          </td>\\r\\n          <td *ngIf=\\\"field?.option == ''\\\">\\r\\n            <div class=\\\"form-control text-info\\\">{{field?.dataType?.name}}</div>\\r\\n          </td>\\r\\n          <td *ngIf=\\\"field?.option != ''\\\">\\r\\n            <div class=\\\"form-control text-info\\\">{{field?.option}}</div>\\r\\n          </td>\\r\\n          <td>\\r\\n            <div class=\\\"form-control text-info\\\">{{field?.blank}}</div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container col-md-5\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"col-md-4 col-form-label\\\">#Rows:</label>\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <div class=\\\"form-control\\\">{{schema?.count}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"col-md-4 col-form-label\\\">Format:</label>\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <div class=\\\"form-control\\\">{{schema?.fileFormat}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <button *ngIf=\\\"exist\\\" class=\\\"btn btn-outline-info col-sm-12 col-md-8 mb-1\\\"\\r\\n                data-toggle=\\\"modal\\\" data-target=\\\"#modal\\\" (click)=\\\"preview()\\\">Preview\\r\\n        </button>\\r\\n        <a *ngIf=\\\"exist\\\" class=\\\"btn btn-outline-success col-sm-12 col-md-8 mb-1\\\"\\r\\n           href='/mockdata/api/v1/schemas/{{schema?.id}}/file'>\\r\\n          Download\\r\\n        </a>\\r\\n        <button *ngIf=\\\"!exist\\\" class=\\\"btn btn-outline-info col-sm-12 col-md-8\\\"\\r\\n                (click)=\\\"generate()\\\">Generate\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-xl\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title text-primary\\\" id=\\\"modalLabel\\\">\\r\\n          Preview (Up to 100)\\r\\n        </h5>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body container\\\">\\r\\n        <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link active\\\" id=\\\"home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#table\\\" role=\\\"tab\\\">Table</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" id=\\\"profile-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#json\\\" role=\\\"tab\\\">Json</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n        <div class=\\\"tab-content\\\">\\r\\n          <br/>\\r\\n          <div class=\\\"tab-pane fade show active\\\" id=\\\"table\\\" role=\\\"tabpanel\\\">\\r\\n            <ngx-datatable\\r\\n              #table\\r\\n              class=\\\"material\\\"\\r\\n              [loadingIndicator]=\\\"loadingIndicator\\\"\\r\\n              [rows]=\\\"rows\\\"\\r\\n              [columns]=\\\"headers\\\"\\r\\n              [columnMode]=\\\"'force'\\\"\\r\\n              [headerHeight]=\\\"50\\\"\\r\\n              [footerHeight]=\\\"50\\\"\\r\\n              [rowHeight]=\\\"'auto'\\\"\\r\\n              [limit]=\\\"5\\\"\\r\\n              [scrollbarH]=\\\"true\\\">\\r\\n            </ngx-datatable>\\r\\n          </div>\\r\\n          <div class=\\\"tab-pane fade\\\" id=\\\"json\\\" role=\\\"tabpanel\\\" style=\\\"overflow: auto;height: 310px; width: inherit;\\\">\\r\\n            <pre *ngFor=\\\"let row of rows\\\" [innerHTML]=\\\"row | json\\\"></pre>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/schema-details/schema-details.component.html\n// module id = ../../../../../src/app/schema-details/schema-details.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {SchemaService} from \"../_service/schema.service\";\r\nimport {Schema} from \"../_models/schema\";\r\nimport {Ng4LoadingSpinnerService} from 'ng4-loading-spinner';\r\nimport {SessionService} from \"../_service/session.service\";\r\n\r\n@Component({\r\n  selector: 'app-schema-details',\r\n  templateUrl: './schema-details.component.html',\r\n  styleUrls: ['./schema-details.component.css']\r\n})\r\nexport class SchemaDetailsComponent implements OnInit {\r\n  schema: Schema;\r\n  rows;\r\n  headers;\r\n  userid: string;\r\n  exist: boolean;\r\n  spinner: boolean = false;\r\n\r\n  constructor(private route: ActivatedRoute, private schemaService: SchemaService, private sessionService: SessionService,\r\n              private spinnerService: Ng4LoadingSpinnerService) {\r\n    this.route.params.subscribe(params => {\r\n      const id = params['id'];\r\n      this.userid = params['userid'];\r\n      this.schemaService.getSchemaById(id).subscribe(\r\n        schema => {\r\n          this.schema = schema;\r\n          this.checkIfGenerate();\r\n          this.spinner = true;\r\n        },\r\n        error => console.log(error)\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  generate() {\r\n    if (this.sessionService.getUser().id != this.userid) {\r\n      alert(\"You can't generate data since you don't own this schema!\");\r\n    } else {\r\n      this.spinnerService.show();\r\n      this.schemaService.generateMockData(this.schema.id).subscribe(\r\n        data => {\r\n          this.spinnerService.hide();\r\n          this.exist = true;\r\n          alert(\"Data generation is done!\");\r\n        },\r\n        error => {\r\n          this.spinnerService.hide();\r\n          alert(\"Data generation fails!\");\r\n          console.log(error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  checkIfGenerate() {\r\n    this.schemaService.checkIfGenerate(this.schema.id).subscribe(\r\n      res => this.exist = res,\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  preview() {\r\n    if (!this.rows) {\r\n      this.schemaService.previewBySchemaId(this.schema.id).subscribe(\r\n        mockData => {\r\n          this.rows = mockData.data;\r\n          this.buildHeaders();\r\n        },\r\n        error => console.log(error)\r\n      );\r\n    }\r\n  }\r\n\r\n  // build headers for table base on mock data fields name\r\n  buildHeaders() {\r\n    const headers = [];\r\n    for (let name in this.rows[0]) {\r\n      headers.push({prop: name});\r\n    }\r\n    this.headers = headers;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/schema-details/schema-details.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"i.fa {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/schema-list/schema-list.component.css\n// module id = ../../../../../src/app/schema-list/schema-list.component.css\n// module chunks = main","module.exports = \"<h3><strong>Schemas</strong></h3>\\r\\n<a class=\\\"btn btn-outline-primary\\\" routerLink=\\\"/schemas/new\\\" *ngIf=\\\"sessionService.hasRole('user')\\\">Create a Schema</a>\\r\\n<table class=\\\"table table-responsive\\\" *ngIf=\\\"schemas?.length != 0\\\">\\r\\n  <thead>\\r\\n  <tr>\\r\\n    <th class=\\\"col-md-8\\\">Schema</th>\\r\\n    <th class=\\\"col-md-2\\\">&nbsp;</th>\\r\\n    <th class=\\\"col-md-2\\\">&nbsp;</th>\\r\\n  </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n  <tr *ngFor=\\\"let schema of schemas; let i = index;\\\">\\r\\n    <td><span><a [routerLink]=\\\"['/users',id,'schemas', schema?.id]\\\">{{schema?.name}}</a></span>\\r\\n      <div>\\r\\n        <span class=\\\"mr-3 text-secondary\\\" *ngFor=\\\"let field of schema?.fields\\\">{{field?.name}}</span>\\r\\n      </div>\\r\\n    </td>\\r\\n    <td>\\r\\n      <i class=\\\"fa fa-pencil mt-1\\\" [routerLink]=\\\"['/schemas', schema?.id, 'update']\\\"></i>\\r\\n    </td>\\r\\n    <td>\\r\\n      <i class=\\\"fa fa-times mt-1\\\" (click)=\\\"deleteSchema(i)\\\"></i>\\r\\n    </td>\\r\\n  </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n<div class=\\\"alert alert-info\\\" *ngIf=\\\"schemas?.length == 0\\\">Not schema found from this user!</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/schema-list/schema-list.component.html\n// module id = ../../../../../src/app/schema-list/schema-list.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {SchemaService} from \"../_service/schema.service\";\r\nimport {Schema} from \"../_models/schema\";\r\nimport {SessionService} from \"../_service/session.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-schema-list',\r\n  templateUrl: './schema-list.component.html',\r\n  styleUrls: ['./schema-list.component.css']\r\n})\r\nexport class SchemaListComponent implements OnInit {\r\n  schemas: [Schema];\r\n  private id;\r\n\r\n  constructor(private route: ActivatedRoute, private schemaService: SchemaService, public sessionService: SessionService) {\r\n    this.route.params.subscribe(params => {\r\n      this.id = params['id'];\r\n      if (!this.id) {\r\n        this.id = sessionService.getUser().id;\r\n      }\r\n      schemaService.getSchemasByUserId(this.id).subscribe(schemas => this.schemas = schemas);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  deleteSchema(index) {\r\n    if (this.sessionService.getUser().id != this.schemas[index].user) {\r\n      alert(\"You can't delete the schema since you don't own this schema!\");\r\n    } else {\r\n      if (confirm(\"Are you sure to delete this schema? Related mock data will be removed!\")) {\r\n        this.schemaService.remove(this.schemas[index].id)\r\n          .subscribe(\r\n            msg => console.log(msg),\r\n            error => console.log(error)\r\n          );\r\n        this.schemas.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/schema-list/schema-list.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".type-input {\\r\\n  cursor: pointer;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\ni.fa {\\r\\n  margin-top: 8px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\ni.fa-pencil {\\r\\n  color: #006b80;\\r\\n}\\r\\n\\r\\n.type {\\r\\n  float: left;\\r\\n  height: 96px;\\r\\n  width: 210px;\\r\\n  line-height: 20px;\\r\\n  padding: 8px 10px;\\r\\n  margin: 0 8px 8px 0;\\r\\n  border-radius: 5px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.type-name {\\r\\n  font-size: 16px;\\r\\n  font-weight: bold;\\r\\n  color: #444;\\r\\n  margin-bottom: 2px;\\r\\n}\\r\\n\\r\\n.type:hover{\\r\\n  background-color: #f0f0f0;\\r\\n}\\r\\n\\r\\n.type-description {\\r\\n  color: #606060;\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n.tab-content{\\r\\n  overflow: auto;\\r\\n  height: 300px;\\r\\n  width: inherit;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/update-schema/update-schema.component.css\n// module id = ../../../../../src/app/update-schema/update-schema.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"schema\\\" [formGroup]=\\\"updateSchemaForm\\\">\\r\\n  <div class=\\\"col-md-7 col-sm-12\\\">\\r\\n    <h3><strong>Update Schema</strong></h3>\\r\\n    <div class=\\\"alert-danger\\\" *ngIf=\\\"schemaError\\\">{{schemaError}}</div>\\r\\n    <div class=\\\"card\\\">\\r\\n      <table class=\\\"table table-sm table-striped\\\">\\r\\n        <thead>\\r\\n        <tr>\\r\\n          <th>Field Name</th>\\r\\n          <th>Type</th>\\r\\n          <th>Blank(%)</th>\\r\\n          <th>Options</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody formArrayName=\\\"fields\\\">\\r\\n        <tr *ngFor=\\\"let field of updateSchemaForm.controls.fields.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n          <td>\\r\\n            <input class=\\\"form-control\\\" formControlName=\\\"name\\\">\\r\\n          </td>\\r\\n          <td>\\r\\n            <input class=\\\"form-control type-input\\\" readonly\\r\\n                   data-toggle=\\\"modal\\\" data-target=\\\"#modal\\\"\\r\\n                   [value]=field.value.dataType.name (click)=\\\"selectedIndex = i\\\">\\r\\n          </td>\\r\\n          <td>\\r\\n            <input class=\\\"form-control\\\" formControlName=\\\"blank\\\" style=\\\"width: 60px\\\">\\r\\n          </td>\\r\\n          <td>\\r\\n            <i class=\\\"fa fa-pencil ml-4\\\"  data-toggle=\\\"modal\\\" data-target=\\\"#optionModal\\\" (click)=\\\"fillTextfield(i)\\\"></i>\\r\\n          </td>\\r\\n          <td>\\r\\n            <i class=\\\"fa fa-times\\\" (click)=\\\"removeField(i)\\\"></i>\\r\\n          </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-outline-dark col-md-5 col-sm-12\\\" (click)=\\\"addField()\\\">Add another field</button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container col-md-5\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"col-md-4 col-form-label\\\">#Rows:</label>\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"number of rows\\\" formControlName=\\\"count\\\">\\r\\n        <div class=\\\"alert alert-danger\\\"\\r\\n             *ngIf=\\\"updateSchemaForm.controls['count'].dirty && updateSchemaForm.controls['count'].invalid\\\">\\r\\n          Rows should be a positive integer!\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"col-md-4 col-form-label\\\">Format:</label>\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <select class=\\\"custom-select form-control\\\" formControlName=\\\"fileFormat\\\">\\r\\n          <option selected>JSON</option>\\r\\n          <option>CSV</option>\\r\\n          <option>XML</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"col-md-4 col-form-label\\\">Schema Name:</label>\\r\\n      <div class=\\\"col-md-8\\\">\\r\\n        <input class=\\\"form-control\\\" placeholder=\\\"schema name\\\" formControlName=\\\"name\\\">\\r\\n        <div class=\\\"alert alert-danger\\\"\\r\\n             *ngIf=\\\"updateSchemaForm.controls['name'].dirty && updateSchemaForm.controls['name'].invalid\\\">\\r\\n          Schema name is required!\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <button class=\\\"btn btn-outline-info col-sm-12 col-md-8\\\"\\r\\n                (click)=\\\"updateSchema(updateSchemaForm.value)\\\"\\r\\n                [disabled]=\\\"updateSchemaForm.invalid\\\">Update Schema\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"modalLabel\\\">\\r\\n          Choose a Type\\r\\n        </h5>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <ul class=\\\"nav nav-pills\\\">\\r\\n          <li class=\\\"nav-item\\\" *ngFor=\\\"let key of category; let i = index\\\">\\r\\n            <a class=\\\"nav-link text-uppercase\\\" [ngClass]=\\\"{active: i==0}\\\" data-toggle=\\\"tab\\\" href=\\\"#{{key}}\\\" role=\\\"tab\\\"\\r\\n               aria-controls=key aria-selected=\\\"true\\\">{{key}}</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n        <div class=\\\"tab-content container\\\">\\r\\n          <div class=\\\"tab-pane fade show\\\" [ngClass]=\\\"{active: i==0}\\\" id={{key}}\\r\\n               *ngFor=\\\"let key of category; let i = index\\\">\\r\\n            <div class=\\\"type\\\" *ngFor=\\\"let type of dataTypes[key]\\\" (click)=\\\"selectType(type)\\\"\\r\\n                 data-dismiss=\\\"modal\\\">\\r\\n              <div class=\\\"type-name\\\">{{type.name}}</div>\\r\\n              <div class=\\\"type-description\\\">{{type.description}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"optionModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">\\r\\n          Formula\\r\\n        </h5>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div style=\\\"font-size: 95%\\\">\\r\\n          <p>Alter the value of this field using <a routerLink=\\\"/syntax\\\" target=\\\"_blank\\\">Mockery formula syntax</a>. Use this to refer to the value of this\\r\\n            schema.</p>\\r\\n          Example: <br>\\r\\n          <p><code>this.firstname</code> => refer to the value of firstname which is defined in schema</p>\\r\\n          <p><code>faker.name.firstName()</code> => use the <a href=\\\"https://github.com/Marak/faker.js\\\" target=\\\"_blank\\\">faker</a>\\r\\n            generator to generate random first name</p>\\r\\n          <p><code>chance.first()</code> => use the <a href=\\\"https://github.com/chancejs/chancejs\\\" target=\\\"_blank\\\">chance</a>\\r\\n            generator to generate random first name</p>\\r\\n          <p><code>casual.first_name</code> => use the <a href=\\\"https://github.com/boo1ean/casual\\\" target=\\\"_blank\\\">casual</a>\\r\\n            generator to generate random first name</p>\\r\\n        </div>\\r\\n        <div class=\\\"container\\\">\\r\\n          <ace-editor [theme]=\\\"'tomorrow'\\\" style=\\\"min-height: 100px; width:100%; overflow: auto;\\\" [mode]=\\\"'javascript'\\\"\\r\\n                      class=\\\"form-control\\\" columns=\\\"60\\\" placeholder=\\\"example: upper(this)\\\" rows=\\\"4\\\" spellcheck=\\\"false\\\"\\r\\n                      [(ngModel)]=\\\"textfield\\\">\\r\\n          </ace-editor>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"applyOption()\\\">Apply</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/update-schema/update-schema.component.html\n// module id = ../../../../../src/app/update-schema/update-schema.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {DataTypeService} from \"../_service/data.type.service\";\r\nimport {FormGroup, Validators, FormArray, FormBuilder} from '@angular/forms';\r\nimport {DataType} from \"../_models/data.type\";\r\nimport {SchemaService} from \"../_service/schema.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n\r\nimport 'brace';\r\nimport 'brace/theme/tomorrow';\r\nimport {Schema} from \"../_models/schema\";\r\nimport {Field} from \"../_models/field\";\r\nimport {SessionService} from \"../_service/session.service\";\r\n\r\n@Component({\r\n  selector: 'app-update-schema',\r\n  templateUrl: './update-schema.component.html',\r\n  styleUrls: ['./update-schema.component.css']\r\n})\r\nexport class UpdateSchemaComponent implements OnInit {\r\n\r\n  dataTypes = {};\r\n  updateSchemaForm: FormGroup;\r\n  selectedIndex;\r\n  textfield = '';\r\n  category = [\"address\", \"company\", \"date\", \"finance\", \"internet\", \"name\", \"phone\", \"random\", \"system\"];\r\n  schema: Schema;\r\n  schemaError;\r\n\r\n  constructor(private fb: FormBuilder,\r\n              private dataTypeService: DataTypeService,\r\n              private sessionService: SessionService,\r\n              private schemaService: SchemaService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) {\r\n    this.dataTypeService.getAllDataTypes().subscribe(dataTypes => this.categorizeTypes(dataTypes));\r\n    this.route.params.subscribe(params => {\r\n      const id = params['id'];\r\n      this.schemaService.getSchemaById(id).subscribe(\r\n        schema => {\r\n          this.schema = schema;\r\n          this.updateSchemaForm = this.buildForm();\r\n        },\r\n        error => console.log(error)\r\n      );\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  categorizeTypes(dataTypes) {\r\n    for (let index in this.category) {\r\n      var kind = this.category[index];\r\n      this.dataTypes[kind] = dataTypes.filter(type => type.name.startsWith(kind)).map(\r\n        type => {\r\n          type.name = type.name.substring(type.name.indexOf('.') + 1).replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase());\r\n          return type;\r\n        });\r\n    }\r\n  }\r\n\r\n  buildField() {\r\n    const fields = <FormArray>this.updateSchemaForm.controls['fields'];\r\n    const lastOne = <FormGroup>fields.controls[fields.length - 1];\r\n    return this.fb.group(lastOne.controls);\r\n  }\r\n\r\n  buildFields() {\r\n    const fields = this.schema.fields.map(\r\n      field => new Field(field.name, field.dataType.name, field.dataType._id, field.option, field.blank, this.fb).buildField()\r\n    );\r\n    return this.fb.array(fields);\r\n  }\r\n\r\n  buildForm() {\r\n    return this.fb.group({\r\n      name: [this.schema.name, Validators.required],\r\n      count: [this.schema.count, [Validators.required, Validators.pattern('^[1-9]+[0-9]*$')]],\r\n      fileFormat: [this.schema.fileFormat, Validators.required],\r\n      fields: this.buildFields()\r\n    });\r\n  }\r\n\r\n  removeField(index) {\r\n    const fields = <FormArray>this.updateSchemaForm.controls['fields'];\r\n    if (fields.length == 1) {\r\n      alert(\"The schema should have one field at least!\");\r\n    } else {\r\n      fields.removeAt(index);\r\n    }\r\n  }\r\n\r\n  addField() {\r\n    const fields = <FormArray>this.updateSchemaForm.controls['fields'];\r\n    const lastField = this.buildField();\r\n    const newField = new Field(\"New\" + lastField.value.name, lastField.value.dataType.name, lastField.value.dataType._id, '', 0, this.fb).buildField();\r\n    fields.push(newField);\r\n  }\r\n\r\n  applyOption() {\r\n    const fields = <FormArray>this.updateSchemaForm.controls['fields'];\r\n    fields.controls[this.selectedIndex].patchValue({option: this.textfield});\r\n    fields.controls[this.selectedIndex].patchValue({\r\n      dataType: {\r\n        _id: \"5a2b5ca6bbeb612e307415f7\",\r\n        name: \"self-defined\"\r\n      }\r\n    });\r\n  }\r\n\r\n  selectType(type: DataType) {\r\n    const fields = <FormArray>this.updateSchemaForm.controls['fields'];\r\n    fields.controls[this.selectedIndex].patchValue({dataType: type});\r\n  }\r\n\r\n  fillTextfield(index) {\r\n    this.selectedIndex = index;\r\n    const fields = <FormArray>this.updateSchemaForm.controls['fields'];\r\n    this.textfield = fields.controls[index].value.option;\r\n  }\r\n\r\n  updateSchema(updateSchema) {\r\n    // Check if same name occurs in different column\r\n    if (!this.checkFieldName(updateSchema.fields)) return;\r\n    if (this.sessionService.getUser().id != this.schema.user) {\r\n      alert(\"You can't update the schema since you don't own this schema!\");\r\n    } else {\r\n      if (confirm(\"Are you sure to change it? Mock data related with this old schema will be removed!\")) {\r\n        updateSchema.id = this.schema.id;\r\n        this.schemaService.update(updateSchema).subscribe(\r\n          schema => this.router.navigate(['/users', this.sessionService.getUser().id, 'schemas', this.schema.id]),\r\n          error => this.schemaError = error.error.text\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  checkFieldName(fields) {\r\n    const set = new Set();\r\n    for (let i in fields) {\r\n      if (set.has(fields[i].name)) {\r\n        this.schemaError = \"Different column cannot have the same name!\";\r\n        return false;\r\n      }\r\n      set.add(fields[i].name);\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/update-schema/update-schema.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/user-details/user-details.component.css\n// module id = ../../../../../src/app/user-details/user-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row col-md-12 container\\\">\\r\\n  <a routerLink=\\\"/users\\\" class=\\\"text-left\\\">Users </a>&nbsp;> {{user?.username}}\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-7 col-sm-12\\\">\\r\\n    <h3><strong>{{user?.username}}</strong></h3>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-form-label\\\"><strong>First Name:</strong></label>\\r\\n          <input type=\\\"text\\\" value=\\\"{{user?.firstName}}\\\" class=\\\"form-control text-info\\\" readonly>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-form-label\\\"><strong>Last Name:</strong></label>\\r\\n          <input type=\\\"text\\\" value=\\\"{{user?.lastName}}\\\" class=\\\"form-control text-info\\\" readonly>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"col-form-label\\\"><strong>Username:</strong></label>\\r\\n      <input type=\\\"text\\\" value=\\\"{{user?.username}}\\\" class=\\\"form-control text-info\\\" readonly>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"col-form-label\\\"><strong>Email:</strong></label>\\r\\n      <input type=\\\"email\\\" value=\\\"{{user?.email}}\\\" class=\\\"form-control text-info\\\" readonly>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-form-label\\\"><strong>Role:</strong></label>\\r\\n          <div class=\\\"custom-controls-stacked d-block my-3\\\">\\r\\n            <label class=\\\"custom-control custom-radio\\\">\\r\\n              <input name=\\\"role\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" (click)=\\\"changeRole('admin')\\\"\\r\\n                     [disabled]=\\\"user.id == sessionService.getUser().id\\\" [checked]=\\\"user?.role === 'admin'\\\">\\r\\n              <span class=\\\"custom-control-indicator\\\"></span>\\r\\n              <span class=\\\"custom-control-description\\\">Admin</span>\\r\\n            </label>\\r\\n            <label class=\\\"custom-control custom-radio\\\">\\r\\n              <input name=\\\"role\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" (click)=\\\"changeRole('user')\\\"\\r\\n                     [disabled]=\\\"user.id == sessionService.getUser().id\\\" [checked]=\\\"user?.role === 'user'\\\">\\r\\n              <span class=\\\"custom-control-indicator\\\"></span>\\r\\n              <span class=\\\"custom-control-description\\\">User</span>\\r\\n            </label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-form-label\\\"><strong>Status:</strong></label>\\r\\n          <div class=\\\"custom-controls-stacked d-block my-3\\\">\\r\\n            <label class=\\\"custom-control custom-radio\\\">\\r\\n              <input name=\\\"status\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" (click)=\\\"changeStatus('true')\\\"\\r\\n                     [disabled]=\\\"user.id == sessionService.getUser().id\\\" [checked]=\\\"user?.status\\\">\\r\\n              <span class=\\\"custom-control-indicator\\\"></span>\\r\\n              <span class=\\\"custom-control-description\\\">True</span>\\r\\n            </label>\\r\\n            <label class=\\\"custom-control custom-radio\\\">\\r\\n              <input name=\\\"status\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" (click)=\\\"changeStatus('false')\\\"\\r\\n                     [disabled]=\\\"user.id == sessionService.getUser().id\\\" [checked]=\\\"!user?.status\\\">\\r\\n              <span class=\\\"custom-control-indicator\\\"></span>\\r\\n              <span class=\\\"custom-control-description\\\">False</span>\\r\\n            </label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" *ngIf=\\\"user?.role.toUpperCase() == 'USER'\\\" class=\\\"btn btn-outline-primary\\\"\\r\\n            [routerLink]=\\\"['/user', user?.id, 'schemas']\\\">\\r\\n      {{user?.username}}' s schemas\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/user-details/user-details.component.html\n// module id = ../../../../../src/app/user-details/user-details.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {UserService} from \"../_service/user.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {User} from \"../_models/user\";\r\nimport {SessionService} from \"../_service/session.service\";\r\n\r\n@Component({\r\n  selector: 'app-user-details',\r\n  templateUrl: './user-details.component.html',\r\n  styleUrls: ['./user-details.component.css']\r\n})\r\nexport class UserDetailsComponent implements OnInit {\r\n\r\n  user: User;\r\n\r\n  constructor(private route: ActivatedRoute, private userService: UserService, private sessionService: SessionService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      const id = params['id'];\r\n      this.userService.getUserById(id).subscribe(\r\n        user => this.user = user,\r\n        error => console.log(error)\r\n      );\r\n    });\r\n  }\r\n\r\n  changeStatus(status) {\r\n    if (this.user.id == this.sessionService.getUser().id) {\r\n      alert(\"You can't change your own status!\");\r\n    } else {\r\n      this.userService.updateUserStatus(this.user.id, status).subscribe(\r\n        user => this.user = user,\r\n        error => console.log(error)\r\n      );\r\n    }\r\n  }\r\n\r\n  changeRole(role) {\r\n    if (this.user.id == this.sessionService.getUser().id) {\r\n      alert(\"You can't change your own role!\");\r\n    } else {\r\n      this.userService.updateUserRole(this.user.id, role).subscribe(\r\n        user => this.user = user,\r\n        error => console.log(error)\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/user-details/user-details.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"input[type=text] {\\r\\n  font-size: 14px;\\r\\n  display: block;\\r\\n  background: transparent;\\r\\n  width: 100%;\\r\\n  border: none;\\r\\n  border-bottom: 1px solid #5264AE;\\r\\n  padding: 8px;\\r\\n  margin: 15px auto;\\r\\n  width: 40%;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/users/users.component.css\n// module id = ../../../../../src/app/users/users.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-md-12\\\">\\r\\n  <h3><strong>Users</strong></h3>\\r\\n  <input placeholder='Type to filter the username/first name/last name/email'\\r\\n         (keyup)='updateFilter($event)' type=\\\"text\\\"/>\\r\\n  <ngx-datatable\\r\\n    #table\\r\\n    class=\\\"material\\\"\\r\\n    [rows]=\\\"users\\\"\\r\\n    [columns]=\\\"[{name:'Username'},{name:'First Name', prop:'firstName'},{name:'Last Name', prop:'lastName'}, {name: 'Email'}, {name:'Role'}, {name:'Status'}]\\\"\\r\\n    [columnMode]=\\\"'force'\\\"\\r\\n    [headerHeight]=\\\"50\\\"\\r\\n    [footerHeight]=\\\"50\\\"\\r\\n    [rowHeight]=\\\"45\\\"\\r\\n    [limit]=\\\"6\\\"\\r\\n    (activate)=\\\"selectUser($event)\\\">\\r\\n  </ngx-datatable>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/users/users.component.html\n// module id = ../../../../../src/app/users/users.component.html\n// module chunks = main","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {UserService} from \"../_service/user.service\";\r\nimport {User} from \"../_models/user\";\r\nimport {Router} from \"@angular/router\";\r\nimport {DatatableComponent} from \"@swimlane/ngx-datatable\";\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  users: [User];\r\n  temp: [User];\r\n  table: DatatableComponent;\r\n\r\n  constructor(private userService: UserService, private router: Router) {\r\n    userService.getAllUsers().subscribe(\r\n      users => {\r\n        this.users = users;\r\n        this.temp = users;\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  selectUser(event) {\r\n    if (event.type == 'click') {\r\n      const user: User = event.row;\r\n      this.router.navigate(['/users', user.id]);\r\n    }\r\n  }\r\n\r\n  updateFilter(event) {\r\n    const val = event.target.value.toLowerCase();\r\n    const temp = <[User]>this.temp.filter(function (user) {\r\n      return user.username.toLowerCase().indexOf(val) !== -1 || user.firstName.toLowerCase().indexOf(val) !== -1 ||\r\n        user.lastName.toLowerCase().indexOf(val) !== -1 || user.email.toLowerCase().indexOf(val) !== -1 || !val;\r\n    });\r\n    this.users = temp;\r\n    this.table.offset = 0;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/users/users.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/main.ts"],"sourceRoot":"webpack:///"}