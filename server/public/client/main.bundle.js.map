{"version":3,"sources":["/Users/i867738/Documents/projects/mockeryData/client/src/$_lazy_route_resource lazy","/Users/i867738/Documents/projects/mockeryData/client/src/app/_models/field.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/_service/AuthGuardService.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/_service/authentication.service.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/_service/data.type.service.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/_service/index.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/_service/schema.service.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/_service/session.service.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/_service/user.service.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/_service/visitor.service.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/app.component.css","/Users/i867738/Documents/projects/mockeryData/client/src/app/app.component.html","/Users/i867738/Documents/projects/mockeryData/client/src/app/app.component.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/app.module.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/create-schema/create-schema.component.css","/Users/i867738/Documents/projects/mockeryData/client/src/app/create-schema/create-schema.component.html","/Users/i867738/Documents/projects/mockeryData/client/src/app/create-schema/create-schema.component.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/formula-syntax/formula-syntax.component.css","/Users/i867738/Documents/projects/mockeryData/client/src/app/formula-syntax/formula-syntax.component.html","/Users/i867738/Documents/projects/mockeryData/client/src/app/formula-syntax/formula-syntax.component.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/home/home.component.css","/Users/i867738/Documents/projects/mockeryData/client/src/app/home/home.component.html","/Users/i867738/Documents/projects/mockeryData/client/src/app/home/home.component.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/login/login.component.css","/Users/i867738/Documents/projects/mockeryData/client/src/app/login/login.component.html","/Users/i867738/Documents/projects/mockeryData/client/src/app/login/login.component.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/logout/logout.component.css","/Users/i867738/Documents/projects/mockeryData/client/src/app/logout/logout.component.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/not-found/not-found.component.css","/Users/i867738/Documents/projects/mockeryData/client/src/app/not-found/not-found.component.html","/Users/i867738/Documents/projects/mockeryData/client/src/app/not-found/not-found.component.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/profile/profile.component.css","/Users/i867738/Documents/projects/mockeryData/client/src/app/profile/profile.component.html","/Users/i867738/Documents/projects/mockeryData/client/src/app/profile/profile.component.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/register/register.component.css","/Users/i867738/Documents/projects/mockeryData/client/src/app/register/register.component.html","/Users/i867738/Documents/projects/mockeryData/client/src/app/register/register.component.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/routing.module.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/schema-details/schema-details.component.css","/Users/i867738/Documents/projects/mockeryData/client/src/app/schema-details/schema-details.component.html","/Users/i867738/Documents/projects/mockeryData/client/src/app/schema-details/schema-details.component.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/schema-list/schema-list.component.css","/Users/i867738/Documents/projects/mockeryData/client/src/app/schema-list/schema-list.component.html","/Users/i867738/Documents/projects/mockeryData/client/src/app/schema-list/schema-list.component.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/update-schema/update-schema.component.css","/Users/i867738/Documents/projects/mockeryData/client/src/app/update-schema/update-schema.component.html","/Users/i867738/Documents/projects/mockeryData/client/src/app/update-schema/update-schema.component.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/user-details/user-details.component.css","/Users/i867738/Documents/projects/mockeryData/client/src/app/user-details/user-details.component.html","/Users/i867738/Documents/projects/mockeryData/client/src/app/user-details/user-details.component.ts","/Users/i867738/Documents/projects/mockeryData/client/src/app/users/users.component.css","/Users/i867738/Documents/projects/mockeryData/client/src/app/users/users.component.html","/Users/i867738/Documents/projects/mockeryData/client/src/app/users/users.component.ts","/Users/i867738/Documents/projects/mockeryData/client/src/environments/environment.ts","/Users/i867738/Documents/projects/mockeryData/client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import {FormBuilder, Validators} from \"@angular/forms\";\n\nexport class Field {\n  constructor(private fieldName, private dateTypeName, private _id, private option, private blank, private fb: FormBuilder) {\n  }\n\n  buildField() {\n    return this.fb.group({\n      name: [this.fieldName, Validators.required],\n      dataType: this.fb.group({\n        name: [this.dateTypeName, Validators.required],\n        _id: [this._id, Validators.required]\n      }),\n      option: this.option,\n      blank: [this.blank, [Validators.required, Validators.pattern('^([0-9]|([1-9][0-9])|100)$')]]\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/_models/field.ts","import {Injectable} from '@angular/core';\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport {SessionService} from \"./session.service\";\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private sessionService: SessionService, private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.sessionService.isAuthenticated()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/_service/AuthGuardService.ts","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport 'rxjs/add/operator/map';\nimport {User} from \"../_models/user\";\nimport {SessionService} from \"./session.service\";\n\n@Injectable()\nexport class AuthenticationService {\n\n  constructor(private http: HttpClient, private sessionService: SessionService) {}\n\n  login(user: User) {\n    return this.http.post<User>('/mockdata/api/v1/login', user);\n  }\n\n  logout() {\n   return this.http.get('/mockdata/api/v1/logout');\n  }\n\n  getCurrentUser() {\n    return this.sessionService.getUser();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/_service/authentication.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DataType } from \"../_models/data.type\";\n\n@Injectable()\nexport class DataTypeService {\n  constructor(private http: HttpClient) { }\n\n  getAllDataTypes() {\n    return this.http.get<[DataType]>('/mockdata/api/v1/types');\n  }\n\n  getTemplate() {\n    return this.http.get<[DataType]>('/mockdata/api/v1/template');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/_service/data.type.service.ts","export * from './authentication.service';\nexport * from './user.service';\nexport * from './session.service';\nexport * from './data.type.service';\nexport * from './schema.service';\nexport * from './visitor.service';\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/_service/index.ts","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {SessionService} from \"./session.service\";\nimport {Schema} from \"../_models/schema\";\nimport {MockData} from \"../_models/mock.data\";\n\n@Injectable()\nexport class SchemaService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getSchemasByUserId(id) {\n    return this.http.get<[Schema]>(`/mockdata/api/v1/users/${id}/schemas`);\n  }\n\n  getSchemaById(id) {\n    return this.http.get<Schema>(`/mockdata/api/v1/schemas/${id}`);\n  }\n\n  create(schema: Schema) {\n    return this.http.post(`/mockdata/api/v1/schemas`, schema);\n  }\n\n  remove(id) {\n    return this.http.delete(`/mockdata/api/v1/schemas/${id}`);\n  }\n\n  update(schema) {\n    return this.http.put(`/mockdata/api/v1/schemas/${schema.id}`, schema);\n  }\n\n  previewBySchemaId(id) {\n    return this.http.get<MockData>(`/mockdata/api/v1/schemas/${id}/preview`);\n  }\n\n  checkIfGenerate(id) {\n    return this.http.get<boolean>(`/mockdata/api/v1/schemas/${id}/exist`);\n  }\n\n  generateMockData(id) {\n    return this.http.get(`/mockdata/api/v1/schemas/${id}/generate`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/_service/schema.service.ts","import {Injectable} from \"@angular/core\"\nimport {User} from \"../_models/user\";\n\n@Injectable()\nexport class SessionService {\n\n  create(user: User) {\n    sessionStorage.user = JSON.stringify(user);\n  }\n\n  destory() {\n    delete sessionStorage.user;\n  }\n\n  isAuthenticated() {\n    return sessionStorage.user && true;\n  }\n\n  getUser() {\n    if (sessionStorage.user) {\n      return JSON.parse(sessionStorage.user);\n    } else {\n      return null;\n    }\n  }\n\n  isLogin() {\n    const user = this.getUser();\n    return user ? true : false;\n  }\n\n  hasRole(role) {\n    const user = this.getUser();\n    return user && user.role === role ? true : false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/_service/session.service.ts","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {User} from '../_models/index';\n\n@Injectable()\nexport class UserService {\n  constructor(private http: HttpClient) {\n  }\n\n  create(user: User) {\n    return this.http.post(`/mockdata/api/v1/users`, user);\n  }\n\n  getAllUsers() {\n    return this.http.get<[User]>(`/mockdata/api/v1/users`);\n  }\n\n  getUserById(id: String) {\n    return this.http.get<User>(`/mockdata/api/v1/users/${id}`);\n  }\n\n  updateUserStatus(id: String, status: Boolean) {\n    return this.http.put<User>(`/mockdata/api/v1/users/${id}/status`, {status: status});\n  }\n\n  updateUserRole(id: String, role: String) {\n    return this.http.put<User>(`/mockdata/api/v1/users/${id}/role`, {role: role});\n  }\n\n  updateUser(id: String, user: User) {\n    return this.http.put<User>(`/mockdata/api/v1/users/${id}`, user);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/_service/user.service.ts","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class VisitorService {\n  constructor(private http: HttpClient) {\n  }\n\n  preview() {\n    return this.http.get('/mockdata/api/v1/visitor/preview');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/_service/visitor.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#userDropdown {\\n  cursor: pointer !important;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">\\n      <img src=\\\"../favicon.ico\\\" width=\\\"30\\\" height=\\\"30\\\" class=\\\"d-inline-block align-top\\\">\\n    </a>\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">\\n      MOCKERY DATA\\n    </a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\n      <ul class=\\\"nav navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">\\n            HOME</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"users\\\" *ngIf=\\\"sessionService.hasRole('admin')\\\">\\n            USERS\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"schemas\\\" *ngIf=\\\"sessionService.isLogin() && sessionService.hasRole('user')\\\">\\n            SCHEMAS\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"sessionService.isLogin()\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"userDropdown\\\"\\n             data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">\\n            HI, {{sessionService.getUser().username | uppercase}}\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"userDropdown\\\">\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"profile\\\">PROFILE</a>\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"logout\\\">LOGOUT</a>\\n          </div>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"!sessionService.isLogin()\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"login\\\">LOGIN</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"!sessionService.isLogin()\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"register\\\">REGISTER</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n<br>\\n<br>\\n<br>\\n<div class=\\\"container mt-1\\\">\\n  <ng-progress [spinner]=\\\"false\\\" [thick]=\\\"true\\\"></ng-progress>\\n  <router-outlet></router-outlet>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import {Component} from '@angular/core';\nimport {SessionService} from \"./_service/session.service\";\nimport {AuthenticationService} from \"./_service/authentication.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  sessionService: SessionService;\n  authenticationService: AuthenticationService;\n\n  constructor(sessionService: SessionService, authenticationService: AuthenticationService) {\n    this.sessionService = sessionService;\n    this.authenticationService = authenticationService;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {RoutingModule} from './routing.module';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport {AceEditorModule} from 'ng2-ace-editor';\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\nimport {Ng4LoadingSpinnerModule} from 'ng4-loading-spinner';\nimport {NgProgressModule} from '@ngx-progressbar/core';\nimport {NgProgressRouterModule} from '@ngx-progressbar/router';\n\nimport {AuthenticationService} from './_service/authentication.service';\nimport {UserService} from \"./_service/user.service\";\nimport {SessionService} from \"./_service/session.service\";\nimport {DataTypeService} from \"./_service/data.type.service\";\nimport {VisitorService} from \"./_service/visitor.service\";\n\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {HomeComponent} from './home/home.component';\nimport {LogoutComponent} from './logout/logout.component';\nimport {SchemaListComponent} from './schema-list/schema-list.component';\nimport {CreateSchemaComponent} from './create-schema/create-schema.component';\nimport {SchemaService} from \"./_service/schema.service\";\nimport {HttpClientModule, HttpClientXsrfModule} from \"@angular/common/http\";\nimport {SchemaDetailsComponent} from './schema-details/schema-details.component';\nimport {NotFoundComponent} from './not-found/not-found.component';\nimport {UsersComponent} from './users/users.component';\nimport {UserDetailsComponent} from './user-details/user-details.component';\nimport {UpdateSchemaComponent} from './update-schema/update-schema.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {FormulaSyntaxComponent} from './formula-syntax/formula-syntax.component';\nimport {AuthGuardService} from \"./_service/AuthGuardService\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    LogoutComponent,\n    SchemaListComponent,\n    CreateSchemaComponent,\n    SchemaDetailsComponent,\n    NotFoundComponent,\n    UsersComponent,\n    UserDetailsComponent,\n    UpdateSchemaComponent,\n    ProfileComponent,\n    FormulaSyntaxComponent\n  ],\n  imports: [\n    Ng4LoadingSpinnerModule.forRoot(),\n    NgProgressModule.forRoot(),\n    NgProgressRouterModule,\n    AceEditorModule,\n    BrowserModule,\n    RoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    // attach csrf token to post and put request\n    HttpClientXsrfModule.withOptions({\n      headerName: 'csrf-token',\n      cookieName: 'csrf-token'\n    }),\n    NgxDatatableModule\n  ],\n  providers: [AuthGuardService, AuthenticationService, UserService, SessionService, DataTypeService, SchemaService, VisitorService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".type-input {\\n  cursor: pointer;\\n  background-color: white;\\n}\\n\\ni.fa {\\n  margin-top: 8px;\\n  cursor: pointer;\\n}\\n\\ni.fa-pencil {\\n  color: #006b80;\\n}\\n\\n.type {\\n  float: left;\\n  height: 96px;\\n  width: 210px;\\n  line-height: 20px;\\n  padding: 8px 10px;\\n  margin: 0 8px 8px 0;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\n.type-name {\\n  font-size: 16px;\\n  font-weight: bold;\\n  color: #444;\\n  margin-bottom: 2px;\\n}\\n\\n.type:hover {\\n  background-color: #f0f0f0;\\n}\\n\\n.type-description {\\n  color: #606060;\\n  font-size: 12px;\\n}\\n\\n.tab-content {\\n  overflow: auto;\\n  height: 300px;\\n  width: inherit;\\n}\\n\\n.datatable-scroll {\\n  width: 100% !important;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/create-schema/create-schema.component.css\n// module id = ../../../../../src/app/create-schema/create-schema.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"createSchemaForm\\\" [formGroup]=\\\"createSchemaForm\\\">\\n  <div class=\\\"col-md-7 col-sm-12\\\">\\n    <h3><strong>New Schema</strong></h3>\\n    <div class=\\\"alert-danger\\\" *ngIf=\\\"schemaError\\\">{{schemaError}}</div>\\n    <div class=\\\"card\\\">\\n      <table class=\\\"table table-sm table-striped\\\">\\n        <thead>\\n        <tr>\\n          <th>Field Name</th>\\n          <th>Type</th>\\n          <th>Blank(%)</th>\\n          <th>Options</th>\\n        </tr>\\n        </thead>\\n        <tbody formArrayName=\\\"fields\\\">\\n        <tr *ngFor=\\\"let field of createSchemaForm.controls.fields.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n          <td>\\n            <input class=\\\"form-control\\\" formControlName=\\\"name\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control type-input\\\" readonly\\n                   data-toggle=\\\"modal\\\" data-target=\\\"#modal\\\"\\n                   [value]=field.value.dataType.name (click)=\\\"selectedIndex = i\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" formControlName=\\\"blank\\\" style=\\\"width: 60px\\\"\\n                   data-toggle=\\\"popover\\\" data-trigger=\\\"focus\\\"\\n                   data-content=\\\"Tip: fields with the same blank % will be blank at the same time.\\\">\\n          </td>\\n          <td>\\n            <i class=\\\"fa fa-pencil ml-4\\\" data-toggle=\\\"modal\\\" data-target=\\\"#optionModal\\\" (click)=\\\"fillTextfield(i)\\\"></i>\\n          </td>\\n          <td>\\n            <i class=\\\"fa fa-times\\\" (click)=\\\"removeField(i)\\\"></i>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <button class=\\\"btn btn-outline-dark col-md-5 col-sm-12\\\" (click)=\\\"addField()\\\">Add another field</button>\\n  </div>\\n\\n  <div class=\\\"container col-md-5\\\">\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-md-4 col-form-label\\\">#Rows:</label>\\n      <div class=\\\"col-md-8\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"number of rows\\\" formControlName=\\\"count\\\">\\n        <div class=\\\"alert alert-danger\\\"\\n             *ngIf=\\\"createSchemaForm.controls['count'].dirty && createSchemaForm.controls['count'].invalid\\\">\\n          Rows should be a positive integer!\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-md-4 col-form-label\\\">Format:</label>\\n      <div class=\\\"col-md-8\\\">\\n        <select class=\\\"custom-select form-control\\\" formControlName=\\\"fileFormat\\\">\\n          <option selected>JSON</option>\\n          <option>CSV</option>\\n          <option>XML</option>\\n        </select>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-md-4 col-form-label\\\">Schema Name:</label>\\n      <div class=\\\"col-md-8\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"schema name\\\" formControlName=\\\"name\\\">\\n        <div class=\\\"alert alert-danger\\\"\\n             *ngIf=\\\"createSchemaForm.controls['name'].dirty && createSchemaForm.controls['name'].invalid\\\">\\n          Schema name is required!\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button class=\\\"btn btn-outline-info col-sm-12 col-md-8\\\" (click)=\\\"createSchema(createSchemaForm.value)\\\"\\n                [disabled]=\\\"createSchemaForm.invalid\\\">Save Schema\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"modal fade\\\" id=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalLabel\\\"\\n     aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"modalLabel\\\">\\n          Choose a Type\\n        </h5>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <ul class=\\\"nav nav-pills\\\">\\n          <li class=\\\"nav-item\\\" *ngFor=\\\"let key of category; let i = index\\\">\\n            <a class=\\\"nav-link text-uppercase\\\" [ngClass]=\\\"{active: i==0}\\\" data-toggle=\\\"tab\\\" href=\\\"#{{key}}\\\" role=\\\"tab\\\"\\n               aria-controls=key aria-selected=\\\"true\\\">{{key}}</a>\\n          </li>\\n        </ul>\\n        <div class=\\\"tab-content container\\\">\\n          <div class=\\\"tab-pane fade show\\\" [ngClass]=\\\"{active: i==0}\\\" id={{key}}\\n               *ngFor=\\\"let key of category; let i = index\\\">\\n            <div class=\\\"type\\\" *ngFor=\\\"let type of dataTypes[key]\\\" (click)=\\\"selectType(type)\\\"\\n                 data-dismiss=\\\"modal\\\">\\n              <div class=\\\"type-name\\\">{{type.name}}</div>\\n              <div class=\\\"type-description\\\">{{type.description}}</div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal fade\\\" id=\\\"optionModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalLabel\\\"\\n     aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">\\n          Formula\\n        </h5>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div style=\\\"font-size: 95%\\\">\\n          <p>Alter the value of this field using <a routerLink=\\\"/syntax\\\" target=\\\"_blank\\\">Mockery formula syntax</a>. Use this to refer to the value of this\\n            schema.</p>\\n          Example: <br>\\n          <p><code>this.firstname</code> => refer to the value of firstname which is defined in schema</p>\\n          <p><code>faker.name.firstName()</code> => use the <a href=\\\"https://github.com/Marak/faker.js\\\" target=\\\"_blank\\\">faker</a>\\n            generator to generate random first name</p>\\n          <p><code>chance.first()</code> => use the <a href=\\\"https://github.com/chancejs/chancejs\\\" target=\\\"_blank\\\">chance</a>\\n            generator to generate random first name</p>\\n          <p><code>casual.first_name</code> => use the <a href=\\\"https://github.com/boo1ean/casual\\\" target=\\\"_blank\\\">casual</a>\\n            generator to generate random first name</p>\\n        </div>\\n        <div class=\\\"container\\\">\\n          <ace-editor [theme]=\\\"'tomorrow'\\\" style=\\\"min-height: 100px; width:100%; overflow: auto;\\\" [mode]=\\\"'javascript'\\\"\\n                      class=\\\"form-control\\\" columns=\\\"60\\\" placeholder=\\\"example: upper(this)\\\" rows=\\\"4\\\" spellcheck=\\\"false\\\"\\n                      [(ngModel)]=\\\"textfield\\\">\\n          </ace-editor>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"applyOption()\\\">Apply</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/create-schema/create-schema.component.html\n// module id = ../../../../../src/app/create-schema/create-schema.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataTypeService } from \"../_service/data.type.service\";\nimport { FormGroup, Validators, FormArray, FormBuilder } from '@angular/forms';\nimport { DataType } from \"../_models/data.type\";\nimport { SchemaService } from \"../_service/schema.service\";\nimport { Router } from \"@angular/router\";\nimport { SessionService } from \"../_service/session.service\";\n\nimport 'brace';\nimport 'brace/theme/tomorrow';\nimport { Field } from \"../_models/field\";\n\n\n@Component({\n  selector: 'app-create-schema',\n  templateUrl: './create-schema.component.html',\n  styleUrls: ['./create-schema.component.css']\n})\nexport class CreateSchemaComponent implements OnInit {\n  dataTypes = {};\n  createSchemaForm: FormGroup;\n  selectedIndex;\n  textfield = '';\n  category = [\"address\", \"company\", \"date\", \"finance\", \"internet\", \"name\", \"phone\", \"random\", \"system\"];\n  schemaError;\n\n\n  constructor(private sessionService: SessionService,\n    private fb: FormBuilder, private dataTypeService: DataTypeService,\n    private schemaService: SchemaService, private router: Router) {\n    this.dataTypeService.getAllDataTypes().subscribe(dataTypes => this.categorizeTypes(dataTypes));\n  }\n\n  categorizeTypes(dataTypes) {\n    for (let index in this.category) {\n      var kind = this.category[index];\n      this.dataTypes[kind] = dataTypes.filter(type => type.name.startsWith(kind)).map(\n        type => {\n          type.name = type.name.substring(type.name.indexOf('.') + 1).replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase());\n          return type;\n        });\n    }\n  }\n\n  async ngOnInit() {\n    this.createSchemaForm = await this.buildForm();\n    console.log(await this.buildForm());\n  }\n\n  buildField() {\n    const fields = <FormArray>this.createSchemaForm.controls['fields'];\n    const lastOne = <FormGroup>fields.controls[fields.length - 1];\n    return this.fb.group(lastOne.controls);\n  }\n\n  async buildFields() {\n    const dataTypes = await this.dataTypeService.getTemplate().toPromise();\n    const fields = dataTypes.map(dataType => {\n      const field = {\n        name: dataType.name.split('.')[1],\n        dataType: dataType,\n        option: '',\n        blank: 0\n      };\n      return field;\n    });\n    const fieldGroup = fields.map(\n      field => new Field(field.name, field.dataType.name, field.dataType._id, field.option, field.blank, this.fb).buildField()\n    );\n    return this.fb.array(fieldGroup);\n  }\n\n  async buildForm() {\n    return this.fb.group({\n      name: ['', Validators.required],\n      count: ['', [Validators.required, Validators.pattern('^[1-9]+[0-9]*$')]],\n      fileFormat: ['', Validators.required],\n      fields: await this.buildFields()\n    });\n  }\n\n  removeField(index) {\n    const fields = <FormArray>this.createSchemaForm.controls['fields'];\n    if (fields.length == 1) {\n      alert(\"The schema should have one field at least!\");\n    } else {\n      fields.removeAt(index);\n    }\n  }\n\n  addField() {\n    const fields = <FormArray>this.createSchemaForm.controls['fields'];\n    const lastField = this.buildField();\n    const newField = new Field(\"New\" + lastField.value.name, lastField.value.dataType.name, lastField.value.dataType._id, '', 0, this.fb).buildField();\n    fields.push(newField);\n  }\n\n  applyOption() {\n    const fields = <FormArray>this.createSchemaForm.controls['fields'];\n    fields.controls[this.selectedIndex].patchValue({ option: this.textfield });\n    fields.controls[this.selectedIndex].patchValue({\n      dataType: {\n        _id: \"5a2b5ca6bbeb612e307415f7\",\n        name: \"self-defined\"\n      }\n    });\n  }\n\n  selectType(type: DataType) {\n    const fields = <FormArray>this.createSchemaForm.controls['fields'];\n    fields.controls[this.selectedIndex].patchValue({ dataType: type });\n  }\n\n  fillTextfield(index) {\n    this.selectedIndex = index;\n    const fields = <FormArray>this.createSchemaForm.controls['fields'];\n    this.textfield = fields.controls[index].value.option;\n  }\n\n  createSchema(newSchema) {\n    // Check if same name occurs in different column\n    if (!this.checkFieldName(newSchema.fields)) return;\n    this.schemaService.create(newSchema).subscribe(\n      data => this.router.navigate(['/user', this.sessionService.getUser().id, 'schemas']),\n      error => this.schemaError = error.error.text\n    );\n  }\n\n  checkFieldName(fields) {\n    const set = new Set();\n    for (let i in fields) {\n      if (set.has(fields[i].name)) {\n        this.schemaError = \"Different field cannot have the same name!\";\n        return false;\n      }\n      set.add(fields[i].name);\n    }\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/create-schema/create-schema.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/formula-syntax/formula-syntax.component.css\n// module id = ../../../../../src/app/formula-syntax/formula-syntax.component.css\n// module chunks = main","module.exports = \"<h3><strong>Formulas Syntax</strong></h3>\\n<p class=\\\"lead\\\">Formulas allow you to use Javascript code to generate data based on customized logic.</p>\\n<h4>Operators</h4>\\n<p><code>+ - * / %</code></p>\\n<h4>Logic</h4>\\n<p><code>&lt; &gt; &lt;= &gt;= == != and or</code></p>\\n<h4>Functions</h4>\\n<p>\\n  Mockery data is built on top of\\n  <a href=\\\"https://github.com/Marak/faker.js\\\" target=\\\"_blank\\\">faker</a>,\\n  <a href=\\\"https://github.com/chancejs/chancejs\\\" target=\\\"_blank\\\">chance</a> and\\n  <a href=\\\"https://github.com/boo1ean/casual\\\" target=\\\"_blank\\\">casual</a>.\\n  You can easily make use of the functions provided by these libraries.\\n</p>\\nExamples:\\n<h5>Faker</h5>\\n<p class=\\\"mb-1\\\"><code>faker.internet.email()</code></p>\\n<p class=\\\"mb-1\\\"><code>faker.company.companyName()</code></p>\\n<p class=\\\"mb-1\\\"><code>faker.date.past()</code></p>\\n<p><code>faker.image.imageUrl()</code></p>\\n<p class=\\\"mb-1\\\">Please go the <a href=\\\"https://github.com/Marak/faker.js#api-methods\\\" target=\\\"_blank\\\">Faker.js</a> to see more\\n  examples.</p>\\n<h5>Chance</h5>\\n<p class=\\\"mb-1\\\"><code>chance.address()</code></p>\\n<p class=\\\"mb-1\\\"><code>chance.age({{ '{' + \\\"type: 'child'\\\" + '}'}})</code></p>\\n<p class=\\\"mb-1\\\"><code>chance.ipv6()</code></p>\\n<p><code>chance.country()</code></p>\\n<p>Please go the <a href=\\\"http://chancejs.com\\\" target=\\\"_blank\\\">Chance.js</a> to see more examples.</p>\\n<h5>Casual</h5>\\n<p class=\\\"mb-1\\\"><code>casual.username</code></p>\\n<p class=\\\"mb-1\\\"><code>casual.rgb_hex</code></p>\\n<p class=\\\"mb-1\\\"><code>casual.domain</code></p>\\n<p><code>casual.state</code></p>\\n<p>Please go the <a href=\\\"https://github.com/boo1ean/casual#embedded-generators\\\" target=\\\"_blank\\\">Casual.js</a> to see\\n  more examples.</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/formula-syntax/formula-syntax.component.html\n// module id = ../../../../../src/app/formula-syntax/formula-syntax.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-formula-syntax',\n  templateUrl: './formula-syntax.component.html',\n  styleUrls: ['./formula-syntax.component.css']\n})\nexport class FormulaSyntaxComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/formula-syntax/formula-syntax.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"@media (min-width: 768px) {\\n  .modal-xl {\\n    width: 75%;\\n    max-width:1200px;\\n  }\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-7 col-sm-12\\\">\\n    <div class=\\\"card\\\">\\n      <h6 class=\\\"card-body\\\">\\n        Need some mock data to test your app?<br>\\n        Mockery Data lets you generate up to 100,000 rows of realistic test data in JSON, CSV, and XML formats.\\n        <div>\\n          Need more data? <a [routerLink]=\\\"['/register']\\\">Sign up now!</a>\\n        </div>\\n      </h6>\\n    </div>\\n    <div class=\\\"card\\\">\\n      <table class=\\\"table table-sm table-striped\\\">\\n        <thead>\\n        <tr>\\n          <th>Field Name</th>\\n          <th>Type</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr>\\n          <td>\\n            <div class=\\\"form-control\\\">id</div>\\n          </td>\\n          <td>\\n            <div class=\\\"form-control\\\">number</div>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <div class=\\\"form-control\\\">firstName</div>\\n          </td>\\n          <td>\\n            <div class=\\\"form-control\\\">firstName</div>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <div class=\\\"form-control\\\">lastName</div>\\n          </td>\\n          <td>\\n            <div class=\\\"form-control\\\">lastName</div>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <div class=\\\"form-control\\\">email</div>\\n          </td>\\n          <td>\\n            <div class=\\\"form-control\\\">email</div>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <div class=\\\"form-control\\\">nationality</div>\\n          </td>\\n          <td>\\n            <div class=\\\"form-control\\\">country</div>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n  <div class=\\\"container col-md-5\\\">\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-md-3 col-form-label\\\">#Rows:</label>\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-control\\\">1000</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-md-3 col-form-label\\\">Format:</label>\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-control\\\">JSON</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button class=\\\"btn btn-outline-primary col-sm-12 col-md-8 mb-1\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modal\\\"\\n                (click)=\\\"preview()\\\">Preview</button>\\n        <a class=\\\"btn btn-outline-success col-sm-12 col-md-8 mb-1\\\"\\n           href='/mockdata/api/v1/visitor/file'>Download Data</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal fade\\\" id=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-xl\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title text-primary\\\" id=\\\"modalLabel\\\">\\n          Preview (Up to 100)\\n        </h5>\\n      </div>\\n      <div class=\\\"modal-body container\\\">\\n        <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link active\\\" id=\\\"home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#table\\\" role=\\\"tab\\\">Table</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" id=\\\"profile-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#json\\\" role=\\\"tab\\\">Json</a>\\n          </li>\\n        </ul>\\n        <div class=\\\"tab-content\\\">\\n          <br/>\\n          <div class=\\\"tab-pane fade show active\\\" id=\\\"table\\\" role=\\\"tabpanel\\\">\\n            <ngx-datatable\\n              #table\\n              class=\\\"material\\\"\\n              [loadingIndicator]=\\\"loadingIndicator\\\"\\n              [rows]=\\\"rows\\\"\\n              [columns]=\\\"headers\\\"\\n              [columnMode]=\\\"'force'\\\"\\n              [headerHeight]=\\\"50\\\"\\n              [footerHeight]=\\\"50\\\"\\n              [rowHeight]=\\\"'auto'\\\"\\n              [limit]=\\\"5\\\"\\n              [scrollbarH]=\\\"true\\\">\\n            </ngx-datatable>\\n          </div>\\n          <div class=\\\"tab-pane fade\\\" id=\\\"json\\\" role=\\\"tabpanel\\\" style=\\\"overflow: auto;height: 310px; width: inherit;\\\">\\n            <pre *ngFor=\\\"let row of rows\\\" [innerHTML]=\\\"row | json\\\"></pre>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {VisitorService} from \"../_service/visitor.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  rows;\n  headers;\n\n  constructor(private visitorService: VisitorService) {\n  }\n\n  ngOnInit() {\n  }\n\n  preview() {\n    if (!this.rows) {\n      this.visitorService.preview().subscribe(mockData => {\n          this.rows = mockData;\n          this.buildHeaders();\n        },\n        error => console.log(error));\n    }\n  }\n\n  buildHeaders() {\n    const headers = [];\n    for (let name in this.rows[0]) {\n      headers.push({prop: name});\n    }\n    this.headers = headers;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/home/home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-md-4 col-md-offset-3\\\">\\n  <h3><strong>Login</strong></h3>\\n  <form [formGroup]=\\\"loginForm\\\">\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n      {{error}}\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-form-label\\\"><strong>Email:</strong></label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"email\\\" required/>\\n      <div class=\\\"alert alert-danger\\\"\\n           *ngIf=\\\"loginForm.controls['email'].invalid && loginForm.controls['email'].dirty\\\">\\n        <div *ngIf=\\\"loginForm.controls['email'].hasError('required')\\\">\\n          Email is required!\\n        </div>\\n        <div\\n          *ngIf=\\\"!loginForm.controls['email'].hasError('required') && loginForm.controls['email'].hasError('email')\\\">\\n          Email format wrong!\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-form-label\\\"><strong>Password:</strong></label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"password\\\" required/>\\n      <div class=\\\"alert alert-danger\\\"\\n           *ngIf=\\\"loginForm.controls['password'].invalid && loginForm.controls['password'].dirty\\\">\\n        <div *ngIf=\\\"loginForm.controls['password'].hasError('required')\\\">\\n          Password is required!\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-primary pull-right\\\" [disabled]=\\\"!loginForm.valid\\\" (click)=\\\"login(loginForm.value)\\\">Login\\n      </button>\\n    </div>\\n    <hr class=\\\"mt-1 mb-1\\\">\\n    <div class=\\\"form-group\\\">\\n      <div style=\\\"font-size:85%\\\">\\n        Don't have an account!\\n        <a [routerLink]=\\\"['/register']\\\">\\n          Sign Up Here\\n        </a>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../_service/index';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {User} from \"../_models/index\";\nimport {Router} from \"@angular/router\";\nimport {SessionService} from \"../_service/session.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  error;\n\n  constructor(private authenticationService: AuthenticationService, private router: Router,\n              private sessionService: SessionService) {\n  }\n\n  ngOnInit() {\n    this.authenticationService.logout();\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  login(user: User) {\n    this.authenticationService.login(user)\n      .subscribe(\n        data => {\n          this.sessionService.create(data);\n          this.loginForm.reset();\n          this.router.navigate(['/']);\n        },\n        error => {\n          this.error = error.error;\n          console.log(error);\n        });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/login/login.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/logout/logout.component.css\n// module id = ../../../../../src/app/logout/logout.component.css\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from \"../_service/authentication.service\";\nimport {Router} from \"@angular/router\";\nimport {SessionService} from \"../_service/session.service\";\n\n@Component({\n  selector: 'app-logout',\n  template: '',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private authenticationService: AuthenticationService, private router: Router, private sessionService: SessionService) {\n  }\n\n  ngOnInit() {\n    this.authenticationService.logout().subscribe(data => this.sessionService.destory());\n    this.router.navigate(['/']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/logout/logout.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/not-found/not-found.component.css\n// module id = ../../../../../src/app/not-found/not-found.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card\\\">\\n  <h4 class=\\\"card-header\\\">404 Not Found</h4>\\n  <div class=\\\"card-block\\\">\\n    <strong>Oops! The page you requested was not found.</strong>\\n    <br>\\n    <strong>Go to <a routerLink=\\\"/\\\">Homepage</a>.</strong>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/not-found/not-found.component.html\n// module id = ../../../../../src/app/not-found/not-found.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/not-found/not-found.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/profile/profile.component.css\n// module id = ../../../../../src/app/profile/profile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-md-7 col-md-offset-1\\\">\\n  <div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\"><strong>Profile</strong></h3></div>\\n    <div class=\\\"panel-body\\\">\\n      <form [formGroup]=\\\"profileForm\\\">\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"profileForm.invalid\\\">\\n          <li *ngIf=\\\"profileForm.controls['firstName'].invalid\\\">\\n            First name is required!\\n          </li>\\n          <li *ngIf=\\\"profileForm.controls['lastName'].invalid\\\">\\n            Last name is required!\\n          </li>\\n          <li *ngIf=\\\"profileForm.controls['username'].invalid\\\">\\n            Length of username should between 3 and 10!\\n          </li>\\n          <li *ngIf=\\\"profileForm.controls['email'].hasError('email')\\\">\\n            Email format wrong!\\n          </li>\\n        </div>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n          {{error}}\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"col-form-label\\\"><strong>First Name:</strong></label>\\n              <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"col-form-label\\\"><strong>Last Name:</strong></label>\\n              <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\"><strong>Username:</strong></label>\\n          <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\"><strong>Email:</strong></label>\\n          <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button data-toggle=\\\"modal\\\" data-target=\\\"#pswModal\\\" class=\\\"form-control col-sm-6 col-md-3 btn btn-primary\\\">Change\\n            Password\\n          </button>\\n          <button (click)=\\\"update(profileForm.value)\\\" class=\\\"pull-right btn btn-success col-sm-6 col-md-3\\\"\\n                  [disabled]=\\\"profileForm.invalid\\\">\\n            Update\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal fade\\\" id=\\\"pswModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalLabel\\\"\\n     aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">\\n          Update password\\n        </h5>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"psw != confirmedPsw\\\">\\n            Password and confirm password are different!\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"col-form-label\\\"><strong>New password:</strong></label>\\n              <input type=\\\"password\\\" [(ngModel)]=\\\"psw\\\" class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"col-form-label\\\"><strong>Confirm password:</strong></label>\\n              <input type=\\\"password\\\" [(ngModel)]=\\\"confirmedPsw\\\" class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\"\\n                (click)=\\\"update({password:psw})\\\" [disabled]=\\\"!(psw?.length > 0 && psw == confirmedPsw)\\\">Update\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/profile/profile.component.html\n// module id = ../../../../../src/app/profile/profile.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {UserService} from \"../_service/index\";\nimport {SessionService} from \"../_service/session.service\";\nimport {User} from \"../_models/user\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  profileForm: FormGroup;\n  error: String;\n  psw: String;\n  confirmedPsw: String;\n\n  constructor(private userService: UserService, private sessionService: SessionService) {\n  }\n\n  ngOnInit() {\n    this.profileForm = new FormGroup({\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n      username: new FormControl('', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(10)])),\n      email: new FormControl('', [Validators.required, Validators.email])\n    });\n    this.profileForm.patchValue(this.sessionService.getUser());\n  }\n\n  update(updateUser) {\n    this.userService.updateUser(this.sessionService.getUser().id, updateUser)\n      .subscribe(\n        user => {\n          this.sessionService.create(user);\n          alert(\"Profile updated!\");\n        },\n        error => {\n          console.log(error);\n          alert(error.error.text);\n        });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/profile/profile.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/register/register.component.css\n// module id = ../../../../../src/app/register/register.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-md-7 col-md-offset-1\\\">\\n  <div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\"><strong>Register</strong></h3></div>\\n\\n    <div class=\\\"panel-body\\\">\\n      <form [formGroup]=\\\"registerForm\\\">\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!registerForm.hasError('clean') && registerForm.invalid\\\">\\n          <li *ngIf=\\\"registerForm.controls['firstName'].dirty && registerForm.controls['firstName'].invalid\\\">\\n            First name is required!\\n          </li>\\n          <li *ngIf=\\\"registerForm.controls['lastName'].dirty && registerForm.controls['lastName'].invalid\\\">\\n            Last name is required!\\n          </li>\\n          <li *ngIf=\\\"registerForm.controls['username'].dirty && registerForm.controls['username'].invalid\\\">\\n            Length of username should between 3 and 10!\\n          </li>\\n          <li *ngIf=\\\"registerForm.controls['email'].dirty && registerForm.controls['email'].hasError('email')\\\">\\n            Email format wrong!\\n          </li>\\n          <li *ngIf=\\\"registerForm.controls['password'].dirty && registerForm.controls['password'].invalid\\\">\\n            Password is required!\\n          </li>\\n          <li *ngIf=\\\"registerForm.controls['confirmedPassword'].dirty && registerForm.hasError('pswNotMatch')\\\">\\n            Password and confirm password are different!\\n          </li>\\n          <li *ngIf=\\\"error\\\">\\n            First name is required!\\n          </li>\\n        </div>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n          {{error}}\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"col-form-label\\\"><strong>First Name:</strong></label>\\n              <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"col-form-label\\\"><strong>Last Name:</strong></label>\\n              <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control \\\" placeholder=\\\"Last Name\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\"><strong>Username:</strong></label>\\n          <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control \\\" placeholder=\\\"Username\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\"><strong>Email:</strong></label>\\n          <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control \\\" placeholder=\\\"Email Address\\\">\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"col-form-label\\\"><strong>Password:</strong></label>\\n              <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control \\\" placeholder=\\\"Password\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"col-form-label\\\"><strong>Confirm password:</strong></label>\\n              <input type=\\\"password\\\" formControlName=\\\"confirmedPassword\\\" class=\\\"form-control \\\"\\n                     placeholder=\\\"Confirm Password\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <button (click)=\\\"register(registerForm.value)\\\" class=\\\"btn btn-primary pull-right\\\" [disabled]=\\\"registerForm.invalid\\\">\\n          Register\\n        </button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/register/register.component.html\n// module id = ../../../../../src/app/register/register.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {UserService} from \"../_service/index\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  error: string;\n\n  constructor(private userService: UserService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n      username: new FormControl('', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(10)])),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required),\n      confirmedPassword: new FormControl('', Validators.required)\n    }, this.formGroupValidator);\n  }\n\n  register(newUser) {\n    delete newUser.confirmedPassword;\n    this.userService.create(newUser)\n      .subscribe(\n        data => {\n          this.registerForm.reset();\n          this.router.navigate(['/login']);\n        },\n        error => {\n          console.log(error);\n          this.error = error.error;\n        });\n  }\n\n  formGroupValidator(formGroup: FormGroup) {\n    const res = {pswNotMatch: false, clean: false};\n    // check password equality\n    if (formGroup.controls['password'].value != formGroup.controls['confirmedPassword'].value) {\n      res.pswNotMatch = true;\n    }\n    // check if all inputs are dirty or not\n    for (let key in formGroup.controls) {\n      if (!formGroup.controls[key].dirty) {\n        res.clean = true;\n        break;\n      }\n    }\n    return (!res.clean && !res.pswNotMatch) ? null : res;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/register/register.component.ts","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {RegisterComponent} from './register/register.component';\nimport {LoginComponent} from './login/login.component';\nimport {LogoutComponent} from \"./logout/logout.component\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {SchemaListComponent} from \"./schema-list/schema-list.component\";\nimport {CreateSchemaComponent} from \"./create-schema/create-schema.component\";\nimport {SchemaDetailsComponent} from \"./schema-details/schema-details.component\";\nimport {NotFoundComponent} from \"./not-found/not-found.component\";\nimport {UsersComponent} from \"./users/users.component\";\nimport {UserDetailsComponent} from \"./user-details/user-details.component\";\nimport {UpdateSchemaComponent} from \"./update-schema/update-schema.component\";\nimport {ProfileComponent} from \"./profile/profile.component\";\nimport {FormulaSyntaxComponent} from \"./formula-syntax/formula-syntax.component\";\nimport {AuthGuardService} from \"./_service/AuthGuardService\";\n\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'logout', component: LogoutComponent},\n  {path: 'user/:id/schemas', component: SchemaListComponent, canActivate: [AuthGuardService]},\n  {path: 'schemas', component: SchemaListComponent, canActivate: [AuthGuardService]},\n  {path: 'schemas/new', component: CreateSchemaComponent, canActivate: [AuthGuardService]},\n  {path: 'schemas/:id/update', component: UpdateSchemaComponent, canActivate: [AuthGuardService]},\n  {path: 'users/:userid/schemas/:id', component: SchemaDetailsComponent, canActivate: [AuthGuardService]},\n  {path: 'users', component: UsersComponent, canActivate: [AuthGuardService]},\n  {path: 'users/:id', component: UserDetailsComponent, canActivate: [AuthGuardService]},\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthGuardService]},\n  {path: 'syntax', component: FormulaSyntaxComponent},\n  {path: 'notfound', component: NotFoundComponent},\n  // otherwise redirect to not found\n  {path: '**', redirectTo: 'notfound'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class RoutingModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/routing.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"@media (min-width: 768px) {\\n  .modal-xl {\\n    width: 75%;\\n    max-width:1200px;\\n  }\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/schema-details/schema-details.component.css\n// module id = ../../../../../src/app/schema-details/schema-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row col-md-12 container\\\">\\n  <a routerLink=\\\"/schemas\\\" class=\\\"text-left\\\" [routerLink]=\\\"['/user', userid, 'schemas']\\\">\\n    Schema List </a>&nbsp;> {{schema?.name}}\\n</div>\\n<ng4-loading-spinner *ngIf=\\\"spinner\\\"></ng4-loading-spinner>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-7 col-sm-12\\\">\\n    <h3><strong>{{schema?.name}}</strong></h3>\\n    <div class=\\\"card\\\">\\n      <table class=\\\"table table-sm table-striped\\\">\\n        <thead>\\n        <tr>\\n          <th>Field Name</th>\\n          <th>Type/Options</th>\\n          <th>Blank(%)</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let field of schema?.fields\\\">\\n          <td>\\n            <div class=\\\"form-control text-primary\\\">{{field?.name}}</div>\\n          </td>\\n          <td *ngIf=\\\"field?.option == ''\\\">\\n            <div class=\\\"form-control text-info\\\">{{field?.dataType?.name}}</div>\\n          </td>\\n          <td *ngIf=\\\"field?.option != ''\\\">\\n            <div class=\\\"form-control text-info\\\">{{field?.option}}</div>\\n          </td>\\n          <td>\\n            <div class=\\\"form-control text-info\\\">{{field?.blank}}</div>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container col-md-5\\\">\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-md-4 col-form-label\\\">#Rows:</label>\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-control\\\">{{schema?.count}}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-md-4 col-form-label\\\">Format:</label>\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-control\\\">{{schema?.fileFormat}}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button *ngIf=\\\"exist\\\" class=\\\"btn btn-outline-info col-sm-12 col-md-8 mb-1\\\"\\n                data-toggle=\\\"modal\\\" data-target=\\\"#modal\\\" (click)=\\\"preview()\\\">Preview\\n        </button>\\n        <a *ngIf=\\\"exist\\\" class=\\\"btn btn-outline-success col-sm-12 col-md-8 mb-1\\\"\\n           href='/mockdata/api/v1/schemas/{{schema?.id}}/file'>\\n          Download\\n        </a>\\n        <button *ngIf=\\\"!exist\\\" class=\\\"btn btn-outline-info col-sm-12 col-md-8\\\"\\n                (click)=\\\"generate()\\\">Generate\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-xl\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title text-primary\\\" id=\\\"modalLabel\\\">\\n          Preview (Up to 100)\\n        </h5>\\n      </div>\\n      <div class=\\\"modal-body container\\\">\\n        <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link active\\\" id=\\\"home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#table\\\" role=\\\"tab\\\">Table</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" id=\\\"profile-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#json\\\" role=\\\"tab\\\">Json</a>\\n          </li>\\n        </ul>\\n        <div class=\\\"tab-content\\\">\\n          <br/>\\n          <div class=\\\"tab-pane fade show active\\\" id=\\\"table\\\" role=\\\"tabpanel\\\">\\n            <ngx-datatable\\n              #table\\n              class=\\\"material\\\"\\n              [loadingIndicator]=\\\"loadingIndicator\\\"\\n              [rows]=\\\"rows\\\"\\n              [columns]=\\\"headers\\\"\\n              [columnMode]=\\\"'force'\\\"\\n              [headerHeight]=\\\"50\\\"\\n              [footerHeight]=\\\"50\\\"\\n              [rowHeight]=\\\"'auto'\\\"\\n              [limit]=\\\"5\\\"\\n              [scrollbarH]=\\\"true\\\">\\n            </ngx-datatable>\\n          </div>\\n          <div class=\\\"tab-pane fade\\\" id=\\\"json\\\" role=\\\"tabpanel\\\" style=\\\"overflow: auto;height: 310px; width: inherit;\\\">\\n            <pre *ngFor=\\\"let row of rows\\\" [innerHTML]=\\\"row | json\\\"></pre>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/schema-details/schema-details.component.html\n// module id = ../../../../../src/app/schema-details/schema-details.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {SchemaService} from \"../_service/schema.service\";\nimport {Schema} from \"../_models/schema\";\nimport {Ng4LoadingSpinnerService} from 'ng4-loading-spinner';\nimport {SessionService} from \"../_service/session.service\";\n\n@Component({\n  selector: 'app-schema-details',\n  templateUrl: './schema-details.component.html',\n  styleUrls: ['./schema-details.component.css']\n})\nexport class SchemaDetailsComponent implements OnInit {\n  schema: Schema;\n  rows;\n  headers;\n  userid: string;\n  exist: boolean;\n  spinner: boolean = false;\n\n  constructor(private route: ActivatedRoute, private schemaService: SchemaService, private sessionService: SessionService,\n              private spinnerService: Ng4LoadingSpinnerService) {\n    this.route.params.subscribe(params => {\n      const id = params['id'];\n      this.userid = params['userid'];\n      this.schemaService.getSchemaById(id).subscribe(\n        schema => {\n          this.schema = schema;\n          this.checkIfGenerate();\n          this.spinner = true;\n        },\n        error => console.log(error)\n      );\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  generate() {\n    if (this.sessionService.getUser().id != this.userid) {\n      alert(\"You can't generate data since you don't own this schema!\");\n    } else {\n      this.spinnerService.show();\n      this.schemaService.generateMockData(this.schema.id).subscribe(\n        data => {\n          this.spinnerService.hide();\n          this.exist = true;\n          alert(\"Data generation is done!\");\n        },\n        error => {\n          this.spinnerService.hide();\n          alert(\"Data generation fails!\");\n          console.log(error);\n        }\n      );\n    }\n  }\n\n  checkIfGenerate() {\n    this.schemaService.checkIfGenerate(this.schema.id).subscribe(\n      res => this.exist = res,\n      error => console.log(error)\n    );\n  }\n\n  preview() {\n    if (!this.rows) {\n      this.schemaService.previewBySchemaId(this.schema.id).subscribe(\n        mockData => {\n          this.rows = mockData.data;\n          this.buildHeaders();\n        },\n        error => console.log(error)\n      );\n    }\n  }\n\n  // build headers for table base on mock data fields name\n  buildHeaders() {\n    const headers = [];\n    for (let name in this.rows[0]) {\n      headers.push({prop: name});\n    }\n    this.headers = headers;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/schema-details/schema-details.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"i.fa {\\n  cursor: pointer;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/schema-list/schema-list.component.css\n// module id = ../../../../../src/app/schema-list/schema-list.component.css\n// module chunks = main","module.exports = \"<h3><strong>Schemas</strong></h3>\\n<a class=\\\"btn btn-outline-primary\\\" routerLink=\\\"/schemas/new\\\" *ngIf=\\\"sessionService.hasRole('user')\\\">Create a Schema</a>\\n<table class=\\\"table table-responsive\\\" *ngIf=\\\"schemas?.length != 0\\\">\\n  <thead>\\n  <tr>\\n    <th class=\\\"col-md-8\\\">Schema</th>\\n    <th class=\\\"col-md-2\\\">&nbsp;</th>\\n    <th class=\\\"col-md-2\\\">&nbsp;</th>\\n  </tr>\\n  </thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let schema of schemas; let i = index;\\\">\\n    <td><span><a [routerLink]=\\\"['/users',id,'schemas', schema?.id]\\\">{{schema?.name}}</a></span>\\n      <div>\\n        <span class=\\\"mr-3 text-secondary\\\" *ngFor=\\\"let field of schema?.fields\\\">{{field?.name}}</span>\\n      </div>\\n    </td>\\n    <td>\\n      <i class=\\\"fa fa-pencil mt-1\\\" [routerLink]=\\\"['/schemas', schema?.id, 'update']\\\"></i>\\n    </td>\\n    <td>\\n      <i class=\\\"fa fa-times mt-1\\\" (click)=\\\"deleteSchema(i)\\\"></i>\\n    </td>\\n  </tr>\\n  </tbody>\\n</table>\\n<div class=\\\"alert alert-info\\\" *ngIf=\\\"schemas?.length == 0\\\">Not schema found from this user!</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/schema-list/schema-list.component.html\n// module id = ../../../../../src/app/schema-list/schema-list.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {SchemaService} from \"../_service/schema.service\";\nimport {Schema} from \"../_models/schema\";\nimport {SessionService} from \"../_service/session.service\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-schema-list',\n  templateUrl: './schema-list.component.html',\n  styleUrls: ['./schema-list.component.css']\n})\nexport class SchemaListComponent implements OnInit {\n  schemas: [Schema];\n  private id;\n\n  constructor(private route: ActivatedRoute, private schemaService: SchemaService, public sessionService: SessionService) {\n    this.route.params.subscribe(params => {\n      this.id = params['id'];\n      if (!this.id) {\n        this.id = sessionService.getUser().id;\n      }\n      schemaService.getSchemasByUserId(this.id).subscribe(schemas => this.schemas = schemas);\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  deleteSchema(index) {\n    if (this.sessionService.getUser().id != this.schemas[index].user) {\n      alert(\"You can't delete the schema since you don't own this schema!\");\n    } else {\n      if (confirm(\"Are you sure to delete this schema? Related mock data will be removed!\")) {\n        this.schemaService.remove(this.schemas[index].id)\n          .subscribe(\n            msg => console.log(msg),\n            error => console.log(error)\n          );\n        this.schemas.splice(index, 1);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/schema-list/schema-list.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".type-input {\\n  cursor: pointer;\\n  background-color: white;\\n}\\n\\ni.fa {\\n  margin-top: 8px;\\n  cursor: pointer;\\n}\\n\\ni.fa-pencil {\\n  color: #006b80;\\n}\\n\\n.type {\\n  float: left;\\n  height: 96px;\\n  width: 210px;\\n  line-height: 20px;\\n  padding: 8px 10px;\\n  margin: 0 8px 8px 0;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\n.type-name {\\n  font-size: 16px;\\n  font-weight: bold;\\n  color: #444;\\n  margin-bottom: 2px;\\n}\\n\\n.type:hover{\\n  background-color: #f0f0f0;\\n}\\n\\n.type-description {\\n  color: #606060;\\n  font-size: 12px;\\n}\\n\\n.tab-content{\\n  overflow: auto;\\n  height: 300px;\\n  width: inherit;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/update-schema/update-schema.component.css\n// module id = ../../../../../src/app/update-schema/update-schema.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"schema\\\" [formGroup]=\\\"updateSchemaForm\\\">\\n  <div class=\\\"col-md-7 col-sm-12\\\">\\n    <h3><strong>Update Schema</strong></h3>\\n    <div class=\\\"alert-danger\\\" *ngIf=\\\"schemaError\\\">{{schemaError}}</div>\\n    <div class=\\\"card\\\">\\n      <table class=\\\"table table-sm table-striped\\\">\\n        <thead>\\n        <tr>\\n          <th>Field Name</th>\\n          <th>Type</th>\\n          <th>Blank(%)</th>\\n          <th>Options</th>\\n        </tr>\\n        </thead>\\n        <tbody formArrayName=\\\"fields\\\">\\n        <tr *ngFor=\\\"let field of updateSchemaForm.controls.fields.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n          <td>\\n            <input class=\\\"form-control\\\" formControlName=\\\"name\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control type-input\\\" readonly\\n                   data-toggle=\\\"modal\\\" data-target=\\\"#modal\\\"\\n                   [value]=field.value.dataType.name (click)=\\\"selectedIndex = i\\\">\\n          </td>\\n          <td>\\n            <input class=\\\"form-control\\\" formControlName=\\\"blank\\\" style=\\\"width: 60px\\\">\\n          </td>\\n          <td>\\n            <i class=\\\"fa fa-pencil ml-4\\\"  data-toggle=\\\"modal\\\" data-target=\\\"#optionModal\\\" (click)=\\\"fillTextfield(i)\\\"></i>\\n          </td>\\n          <td>\\n            <i class=\\\"fa fa-times\\\" (click)=\\\"removeField(i)\\\"></i>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <button class=\\\"btn btn-outline-dark col-md-5 col-sm-12\\\" (click)=\\\"addField()\\\">Add another field</button>\\n  </div>\\n\\n  <div class=\\\"container col-md-5\\\">\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-md-4 col-form-label\\\">#Rows:</label>\\n      <div class=\\\"col-md-8\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"number of rows\\\" formControlName=\\\"count\\\">\\n        <div class=\\\"alert alert-danger\\\"\\n             *ngIf=\\\"updateSchemaForm.controls['count'].dirty && updateSchemaForm.controls['count'].invalid\\\">\\n          Rows should be a positive integer!\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-md-4 col-form-label\\\">Format:</label>\\n      <div class=\\\"col-md-8\\\">\\n        <select class=\\\"custom-select form-control\\\" formControlName=\\\"fileFormat\\\">\\n          <option selected>JSON</option>\\n          <option>CSV</option>\\n          <option>XML</option>\\n        </select>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-md-4 col-form-label\\\">Schema Name:</label>\\n      <div class=\\\"col-md-8\\\">\\n        <input class=\\\"form-control\\\" placeholder=\\\"schema name\\\" formControlName=\\\"name\\\">\\n        <div class=\\\"alert alert-danger\\\"\\n             *ngIf=\\\"updateSchemaForm.controls['name'].dirty && updateSchemaForm.controls['name'].invalid\\\">\\n          Schema name is required!\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button class=\\\"btn btn-outline-info col-sm-12 col-md-8\\\"\\n                (click)=\\\"updateSchema(updateSchemaForm.value)\\\"\\n                [disabled]=\\\"updateSchemaForm.invalid\\\">Update Schema\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal fade\\\" id=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalLabel\\\"\\n     aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"modalLabel\\\">\\n          Choose a Type\\n        </h5>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <ul class=\\\"nav nav-pills\\\">\\n          <li class=\\\"nav-item\\\" *ngFor=\\\"let key of category; let i = index\\\">\\n            <a class=\\\"nav-link text-uppercase\\\" [ngClass]=\\\"{active: i==0}\\\" data-toggle=\\\"tab\\\" href=\\\"#{{key}}\\\" role=\\\"tab\\\"\\n               aria-controls=key aria-selected=\\\"true\\\">{{key}}</a>\\n          </li>\\n        </ul>\\n        <div class=\\\"tab-content container\\\">\\n          <div class=\\\"tab-pane fade show\\\" [ngClass]=\\\"{active: i==0}\\\" id={{key}}\\n               *ngFor=\\\"let key of category; let i = index\\\">\\n            <div class=\\\"type\\\" *ngFor=\\\"let type of dataTypes[key]\\\" (click)=\\\"selectType(type)\\\"\\n                 data-dismiss=\\\"modal\\\">\\n              <div class=\\\"type-name\\\">{{type.name}}</div>\\n              <div class=\\\"type-description\\\">{{type.description}}</div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal fade\\\" id=\\\"optionModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalLabel\\\"\\n     aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">\\n          Formula\\n        </h5>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div style=\\\"font-size: 95%\\\">\\n          <p>Alter the value of this field using <a routerLink=\\\"/syntax\\\" target=\\\"_blank\\\">Mockery formula syntax</a>. Use this to refer to the value of this\\n            schema.</p>\\n          Example: <br>\\n          <p><code>this.firstname</code> => refer to the value of firstname which is defined in schema</p>\\n          <p><code>faker.name.firstName()</code> => use the <a href=\\\"https://github.com/Marak/faker.js\\\" target=\\\"_blank\\\">faker</a>\\n            generator to generate random first name</p>\\n          <p><code>chance.first()</code> => use the <a href=\\\"https://github.com/chancejs/chancejs\\\" target=\\\"_blank\\\">chance</a>\\n            generator to generate random first name</p>\\n          <p><code>casual.first_name</code> => use the <a href=\\\"https://github.com/boo1ean/casual\\\" target=\\\"_blank\\\">casual</a>\\n            generator to generate random first name</p>\\n        </div>\\n        <div class=\\\"container\\\">\\n          <ace-editor [theme]=\\\"'tomorrow'\\\" style=\\\"min-height: 100px; width:100%; overflow: auto;\\\" [mode]=\\\"'javascript'\\\"\\n                      class=\\\"form-control\\\" columns=\\\"60\\\" placeholder=\\\"example: upper(this)\\\" rows=\\\"4\\\" spellcheck=\\\"false\\\"\\n                      [(ngModel)]=\\\"textfield\\\">\\n          </ace-editor>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"applyOption()\\\">Apply</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/update-schema/update-schema.component.html\n// module id = ../../../../../src/app/update-schema/update-schema.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {DataTypeService} from \"../_service/data.type.service\";\nimport {FormGroup, Validators, FormArray, FormBuilder} from '@angular/forms';\nimport {DataType} from \"../_models/data.type\";\nimport {SchemaService} from \"../_service/schema.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\nimport 'brace';\nimport 'brace/theme/tomorrow';\nimport {Schema} from \"../_models/schema\";\nimport {Field} from \"../_models/field\";\nimport {SessionService} from \"../_service/session.service\";\n\n@Component({\n  selector: 'app-update-schema',\n  templateUrl: './update-schema.component.html',\n  styleUrls: ['./update-schema.component.css']\n})\nexport class UpdateSchemaComponent implements OnInit {\n\n  dataTypes = {};\n  updateSchemaForm: FormGroup;\n  selectedIndex;\n  textfield = '';\n  category = [\"address\", \"company\", \"date\", \"finance\", \"internet\", \"name\", \"phone\", \"random\", \"system\"];\n  schema: Schema;\n  schemaError;\n\n  constructor(private fb: FormBuilder,\n              private dataTypeService: DataTypeService,\n              private sessionService: SessionService,\n              private schemaService: SchemaService,\n              private route: ActivatedRoute,\n              private router: Router) {\n    this.dataTypeService.getAllDataTypes().subscribe(dataTypes => this.categorizeTypes(dataTypes));\n    this.route.params.subscribe(params => {\n      const id = params['id'];\n      this.schemaService.getSchemaById(id).subscribe(\n        schema => {\n          this.schema = schema;\n          this.updateSchemaForm = this.buildForm();\n        },\n        error => console.log(error)\n      );\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  categorizeTypes(dataTypes) {\n    for (let index in this.category) {\n      var kind = this.category[index];\n      this.dataTypes[kind] = dataTypes.filter(type => type.name.startsWith(kind)).map(\n        type => {\n          type.name = type.name.substring(type.name.indexOf('.') + 1).replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase());\n          return type;\n        });\n    }\n  }\n\n  buildField() {\n    const fields = <FormArray>this.updateSchemaForm.controls['fields'];\n    const lastOne = <FormGroup>fields.controls[fields.length - 1];\n    return this.fb.group(lastOne.controls);\n  }\n\n  buildFields() {\n    const fields = this.schema.fields.map(\n      field => new Field(field.name, field.dataType.name, field.dataType._id, field.option, field.blank, this.fb).buildField()\n    );\n    return this.fb.array(fields);\n  }\n\n  buildForm() {\n    return this.fb.group({\n      name: [this.schema.name, Validators.required],\n      count: [this.schema.count, [Validators.required, Validators.pattern('^[1-9]+[0-9]*$')]],\n      fileFormat: [this.schema.fileFormat, Validators.required],\n      fields: this.buildFields()\n    });\n  }\n\n  removeField(index) {\n    const fields = <FormArray>this.updateSchemaForm.controls['fields'];\n    if (fields.length == 1) {\n      alert(\"The schema should have one field at least!\");\n    } else {\n      fields.removeAt(index);\n    }\n  }\n\n  addField() {\n    const fields = <FormArray>this.updateSchemaForm.controls['fields'];\n    const lastField = this.buildField();\n    const newField = new Field(\"New\" + lastField.value.name, lastField.value.dataType.name, lastField.value.dataType._id, '', 0, this.fb).buildField();\n    fields.push(newField);\n  }\n\n  applyOption() {\n    const fields = <FormArray>this.updateSchemaForm.controls['fields'];\n    fields.controls[this.selectedIndex].patchValue({option: this.textfield});\n    fields.controls[this.selectedIndex].patchValue({\n      dataType: {\n        _id: \"5a2b5ca6bbeb612e307415f7\",\n        name: \"self-defined\"\n      }\n    });\n  }\n\n  selectType(type: DataType) {\n    const fields = <FormArray>this.updateSchemaForm.controls['fields'];\n    fields.controls[this.selectedIndex].patchValue({dataType: type});\n  }\n\n  fillTextfield(index) {\n    this.selectedIndex = index;\n    const fields = <FormArray>this.updateSchemaForm.controls['fields'];\n    this.textfield = fields.controls[index].value.option;\n  }\n\n  updateSchema(updateSchema) {\n    // Check if same name occurs in different column\n    if (!this.checkFieldName(updateSchema.fields)) return;\n    if (this.sessionService.getUser().id != this.schema.user) {\n      alert(\"You can't update the schema since you don't own this schema!\");\n    } else {\n      if (confirm(\"Are you sure to change it? Mock data related with this old schema will be removed!\")) {\n        updateSchema.id = this.schema.id;\n        this.schemaService.update(updateSchema).subscribe(\n          schema => this.router.navigate(['/users', this.sessionService.getUser().id, 'schemas', this.schema.id]),\n          error => this.schemaError = error.error.text\n        );\n      }\n    }\n  }\n\n  checkFieldName(fields) {\n    const set = new Set();\n    for (let i in fields) {\n      if (set.has(fields[i].name)) {\n        this.schemaError = \"Different column cannot have the same name!\";\n        return false;\n      }\n      set.add(fields[i].name);\n    }\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/update-schema/update-schema.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/user-details/user-details.component.css\n// module id = ../../../../../src/app/user-details/user-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row col-md-12 container\\\">\\n  <a routerLink=\\\"/users\\\" class=\\\"text-left\\\">Users </a>&nbsp;> {{user?.username}}\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-7 col-sm-12\\\">\\n    <h3><strong>{{user?.username}}</strong></h3>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\"><strong>First Name:</strong></label>\\n          <input type=\\\"text\\\" value=\\\"{{user?.firstName}}\\\" class=\\\"form-control text-info\\\" readonly>\\n        </div>\\n      </div>\\n      <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\"><strong>Last Name:</strong></label>\\n          <input type=\\\"text\\\" value=\\\"{{user?.lastName}}\\\" class=\\\"form-control text-info\\\" readonly>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-form-label\\\"><strong>Username:</strong></label>\\n      <input type=\\\"text\\\" value=\\\"{{user?.username}}\\\" class=\\\"form-control text-info\\\" readonly>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-form-label\\\"><strong>Email:</strong></label>\\n      <input type=\\\"email\\\" value=\\\"{{user?.email}}\\\" class=\\\"form-control text-info\\\" readonly>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\"><strong>Role:</strong></label>\\n          <div class=\\\"custom-controls-stacked d-block my-3\\\">\\n            <label class=\\\"custom-control custom-radio\\\">\\n              <input name=\\\"role\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" (click)=\\\"changeRole('admin')\\\"\\n                     [disabled]=\\\"user.id == sessionService.getUser().id\\\" [checked]=\\\"user?.role === 'admin'\\\">\\n              <span class=\\\"custom-control-indicator\\\"></span>\\n              <span class=\\\"custom-control-description\\\">Admin</span>\\n            </label>\\n            <label class=\\\"custom-control custom-radio\\\">\\n              <input name=\\\"role\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" (click)=\\\"changeRole('user')\\\"\\n                     [disabled]=\\\"user.id == sessionService.getUser().id\\\" [checked]=\\\"user?.role === 'user'\\\">\\n              <span class=\\\"custom-control-indicator\\\"></span>\\n              <span class=\\\"custom-control-description\\\">User</span>\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\"><strong>Status:</strong></label>\\n          <div class=\\\"custom-controls-stacked d-block my-3\\\">\\n            <label class=\\\"custom-control custom-radio\\\">\\n              <input name=\\\"status\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" (click)=\\\"changeStatus('true')\\\"\\n                     [disabled]=\\\"user.id == sessionService.getUser().id\\\" [checked]=\\\"user?.status\\\">\\n              <span class=\\\"custom-control-indicator\\\"></span>\\n              <span class=\\\"custom-control-description\\\">True</span>\\n            </label>\\n            <label class=\\\"custom-control custom-radio\\\">\\n              <input name=\\\"status\\\" type=\\\"radio\\\" class=\\\"custom-control-input\\\" (click)=\\\"changeStatus('false')\\\"\\n                     [disabled]=\\\"user.id == sessionService.getUser().id\\\" [checked]=\\\"!user?.status\\\">\\n              <span class=\\\"custom-control-indicator\\\"></span>\\n              <span class=\\\"custom-control-description\\\">False</span>\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <button type=\\\"button\\\" *ngIf=\\\"user?.role.toUpperCase() == 'USER'\\\" class=\\\"btn btn-outline-primary\\\"\\n            [routerLink]=\\\"['/user', user?.id, 'schemas']\\\">\\n      {{user?.username}}' s schemas\\n    </button>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/user-details/user-details.component.html\n// module id = ../../../../../src/app/user-details/user-details.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../_service/user.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {User} from \"../_models/user\";\nimport {SessionService} from \"../_service/session.service\";\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n\n  user: User;\n\n  constructor(private route: ActivatedRoute, private userService: UserService, private sessionService: SessionService) {\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const id = params['id'];\n      this.userService.getUserById(id).subscribe(\n        user => this.user = user,\n        error => console.log(error)\n      );\n    });\n  }\n\n  changeStatus(status) {\n    if (this.user.id == this.sessionService.getUser().id) {\n      alert(\"You can't change your own status!\");\n    } else {\n      this.userService.updateUserStatus(this.user.id, status).subscribe(\n        user => this.user = user,\n        error => console.log(error)\n      );\n    }\n  }\n\n  changeRole(role) {\n    if (this.user.id == this.sessionService.getUser().id) {\n      alert(\"You can't change your own role!\");\n    } else {\n      this.userService.updateUserRole(this.user.id, role).subscribe(\n        user => this.user = user,\n        error => console.log(error)\n      );\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/user-details/user-details.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"input[type=text] {\\n  font-size: 14px;\\n  display: block;\\n  background: transparent;\\n  width: 100%;\\n  border: none;\\n  border-bottom: 1px solid #5264AE;\\n  padding: 8px;\\n  margin: 15px auto;\\n  width: 40%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/users/users.component.css\n// module id = ../../../../../src/app/users/users.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-md-12\\\">\\n  <h3><strong>Users</strong></h3>\\n  <input placeholder='Type to filter the username/first name/last name/email'\\n         (keyup)='updateFilter($event)' type=\\\"text\\\"/>\\n  <ngx-datatable\\n    #table\\n    class=\\\"material\\\"\\n    [rows]=\\\"users\\\"\\n    [columns]=\\\"[{name:'Username'},{name:'First Name', prop:'firstName'},{name:'Last Name', prop:'lastName'}, {name: 'Email'}, {name:'Role'}, {name:'Status'}]\\\"\\n    [columnMode]=\\\"'force'\\\"\\n    [headerHeight]=\\\"50\\\"\\n    [footerHeight]=\\\"50\\\"\\n    [rowHeight]=\\\"45\\\"\\n    [limit]=\\\"6\\\"\\n    (activate)=\\\"selectUser($event)\\\">\\n  </ngx-datatable>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/users/users.component.html\n// module id = ../../../../../src/app/users/users.component.html\n// module chunks = main","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {UserService} from \"../_service/user.service\";\nimport {User} from \"../_models/user\";\nimport {Router} from \"@angular/router\";\nimport {DatatableComponent} from \"@swimlane/ngx-datatable\";\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  users: [User];\n  temp: [User];\n  table: DatatableComponent;\n\n  constructor(private userService: UserService, private router: Router) {\n    userService.getAllUsers().subscribe(\n      users => {\n        this.users = users;\n        this.temp = users;\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  selectUser(event) {\n    if (event.type == 'click') {\n      const user: User = event.row;\n      this.router.navigate(['/users', user.id]);\n    }\n  }\n\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n    const temp = <[User]>this.temp.filter(function (user) {\n      return user.username.toLowerCase().indexOf(val) !== -1 || user.firstName.toLowerCase().indexOf(val) !== -1 ||\n        user.lastName.toLowerCase().indexOf(val) !== -1 || user.email.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    this.users = temp;\n    this.table.offset = 0;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/app/users/users.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/i867738/Documents/projects/mockeryData/client/src/main.ts"],"sourceRoot":"webpack:///"}