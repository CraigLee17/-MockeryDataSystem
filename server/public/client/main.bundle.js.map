{"version":3,"sources":["D:/webStormSrc/mockeryData/client/src/$_gendir lazy","D:/webStormSrc/mockeryData/client/src/app/_service/authentication.service.ts","D:/webStormSrc/mockeryData/client/src/app/_service/index.ts","D:/webStormSrc/mockeryData/client/src/app/_service/session.service.ts","D:/webStormSrc/mockeryData/client/src/app/_service/user.service.ts","D:/webStormSrc/mockeryData/client/src/app/app.component.css","D:/webStormSrc/mockeryData/client/src/app/app.component.html","D:/webStormSrc/mockeryData/client/src/app/app.component.ts","D:/webStormSrc/mockeryData/client/src/app/app.module.ts","D:/webStormSrc/mockeryData/client/src/app/home/home.component.css","D:/webStormSrc/mockeryData/client/src/app/home/home.component.html","D:/webStormSrc/mockeryData/client/src/app/home/home.component.ts","D:/webStormSrc/mockeryData/client/src/app/login/login.component.css","D:/webStormSrc/mockeryData/client/src/app/login/login.component.html","D:/webStormSrc/mockeryData/client/src/app/login/login.component.ts","D:/webStormSrc/mockeryData/client/src/app/register/register.component.css","D:/webStormSrc/mockeryData/client/src/app/register/register.component.html","D:/webStormSrc/mockeryData/client/src/app/register/register.component.ts","D:/webStormSrc/mockeryData/client/src/app/routing.module.ts","D:/webStormSrc/mockeryData/client/src/environments/environment.ts","D:/webStormSrc/mockeryData/client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import {Injectable} from '@angular/core';\r\nimport {Http, Response} from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport {User} from \"../_models/user\";\r\nimport {SessionService} from \"./session.service\";\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n  constructor(private http: Http, private sessionService: SessionService) {\r\n  }\r\n\r\n  login(user: User) {\r\n    return this.http.post('/mockdata/api/v1/login', user)\r\n      .map((response: Response) => {\r\n        let user = response.json();\r\n        if (user) {\r\n          this.sessionService.create(user);\r\n        }\r\n        return user;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    this.http.get('/mockdata/api/v1/logout');\r\n    this.sessionService.destory();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/_service/authentication.service.ts","export * from './authentication.service';\r\nexport * from './user.service';\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/_service/index.ts","import {Injectable} from \"@angular/core\"\r\nimport {User} from \"../_models/user\";\r\n\r\n@Injectable()\r\nexport class SessionService {\r\n\r\n  create(user: User) {\r\n    sessionStorage.user = JSON.stringify(user);\r\n  }\r\n\r\n  destory() {\r\n    delete sessionStorage.user;\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return sessionStorage.user && true;\r\n  }\r\n\r\n  getUser() {\r\n    if (sessionStorage.user) {\r\n      return JSON.parse(sessionStorage.user);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  isLogin() {\r\n    var user = this.getUser();\r\n    return user ? true : false;\r\n  }\r\n\r\n  hasRole(role) {\r\n    var user = this.getUser();\r\n    return user && user.role === role ? true : false;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/_service/session.service.ts","import {Injectable} from '@angular/core';\r\nimport {Http, Headers, RequestOptions, Response} from '@angular/http';\r\n\r\nimport {User} from '../_models/index';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(private http: Http) {\r\n  }\r\n\r\n  create(user: User) {\r\n    return this.http.post('/mockdata/api/v1/user', user).map((response: Response) => response.json());\r\n  }\r\n\r\n  getByEmail(email: string) {\r\n    return this.http.get('/mockdata/api/v1/user/' + email).map((response: Response) => response.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/_service/user.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!-- Navigation -->\\n<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/home\\\">\\n      <img src=\\\"../favicon.ico\\\" width=\\\"35\\\" height=\\\"35\\\" class=\\\"d-inline-block align-top\\\">\\n    </a>\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/home\\\">\\n      MOCKERY DATA\\n    </a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\n      <ul class=\\\"nav navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home</a>\\n        </li>\\n        <!--<li class=\\\"nav-item\\\" *ngIf=\\\"curUser\\\">\\n          <a class=\\\"nav-link\\\" style=\\\"color: #61affe\\\">Hi, {{curUser.username}}</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"curUser\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"login\\\">Logout</a>\\n        </li>-->\\n        <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"curUser\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\" routerLink=\\\"\\\">\\n            Hi, {{curUser.username}}\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\n            <button class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">Logout</button>\\n          </div>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"!curUser\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"login\\\">Login</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"!curUser\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"register\\\">Register</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  <br>\\n  <br>\\n  <br>\\n  <router-outlet></router-outlet>\\n  <hr>\\n  <footer>\\n    <div class=\\\"container\\\">\\n      <span class=\\\"text-muted\\\"> © 2017 Mockery Data</span>\\n    </div>\\n  </footer>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import {Component} from '@angular/core';\nimport {SessionService} from \"./_service/session.service\";\nimport {User} from \"./_models/user\";\nimport {AuthenticationService} from \"./_service/authentication.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  curUser: User;\n  authenticationService: AuthenticationService;\n\n  constructor(sessionService: SessionService, authenticationService: AuthenticationService) {\n    this.curUser = sessionService.getUser();\n    this.authenticationService = authenticationService;\n  }\n\n  logout() {\n    this.authenticationService.logout();\n    this.curUser = null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {RoutingModule} from './routing.module';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\n\nimport {AuthenticationService} from './_service/authentication.service';\nimport {UserService} from \"./_service/user.service\";\nimport {SessionService} from \"./_service/session.service\";\n\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {HomeComponent} from './home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    RoutingModule,\n    ReactiveFormsModule,\n    HttpModule\n  ],\n  providers: [AuthenticationService, UserService, SessionService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row container\\\">\\n  <div class=\\\"col-md-7 col-sm-12\\\">\\n    <h6 class=\\\"card\\\">\\n      Need some mock data to test your app?<br>\\n      Mockery Data lets you generate up to 1,000 rows of realistic test data in JSON, CSV, SQL, and Excel formats.<br>\\n      <div>\\n        Need more data? <a [routerLink]=\\\"['/register']\\\">Sign up now!</a>\\n      </div>\\n    </h6>\\n\\n    <div class=\\\"card\\\">\\n      <table class=\\\"table table-striped table-responsive\\\">\\n        <thead>\\n        <tr>\\n          <th>Field Name</th>\\n          <th>Type</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr>\\n          <td><input class=\\\"form-control\\\" value=\\\"id\\\"></td>\\n          <td><input class=\\\"form-control\\\" value=\\\"number\\\"></td>\\n        </tr>\\n        <tr>\\n          <td><input class=\\\"form-control\\\" value=\\\"name\\\"></td>\\n          <td><input class=\\\"form-control\\\" value=\\\"name\\\"></td>\\n        </tr>\\n        <tr>\\n          <td><input class=\\\"form-control\\\" value=\\\"email\\\"></td>\\n          <td><input class=\\\"form-control\\\" value=\\\"email\\\"></td>\\n        </tr>\\n        <tr>\\n          <td><input class=\\\"form-control\\\" value=\\\"nationality\\\"></td>\\n          <td><input class=\\\"form-control\\\" value=\\\"country\\\"></td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n\\n    <div class=\\\"container col-md-5\\\">\\n      <div class=\\\"form-group row\\\">\\n        <label class=\\\"col-md-2 col-form-label\\\">#Rows:</label>\\n        <div class=\\\"col-md-4\\\">\\n          <input class=\\\"form-control\\\">\\n        </div>\\n        <label class=\\\"col-md-2 col-form-label\\\">Format:</label>\\n        <div class=\\\"col-md-4\\\">\\n          <select class=\\\"custom-select form-control\\\">\\n            <option selected>JSON</option>\\n            <option>CSV</option>\\n            <option>XML</option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"row float-right\\\">\\n        <button class=\\\"btn btn-outline-success\\\">Download Data</button>\\n      </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit() {}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/home/home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-top:30px\\\">\\n  <div class=\\\"col-md-4 col-md-offset-3\\\">\\n    <h3><strong>Login</strong></h3>\\n\\n    <form [formGroup]=\\\"loginForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"email\\\" required/>\\n        <div class=\\\"alert alert-danger\\\"\\n             *ngIf=\\\"loginForm.controls['email'].invalid && loginForm.controls['email'].dirty\\\">\\n          <div *ngIf=\\\"loginForm.controls['email'].hasError('required')\\\">\\n            Email is required!\\n          </div>\\n          <div\\n            *ngIf=\\\"!loginForm.controls['email'].hasError('required') && loginForm.controls['email'].hasError('email')\\\">\\n            Email format wrong!\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"password\\\" required/>\\n        <div class=\\\"alert alert-danger\\\"\\n             *ngIf=\\\"loginForm.controls['password'].invalid && loginForm.controls['password'].dirty\\\">\\n          <div *ngIf=\\\"loginForm.controls['password'].hasError('required')\\\">\\n            Password is required!\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!loginForm.valid\\\" (click)=\\\"login(loginForm.value)\\\">Login\\n        </button>\\n      </div>\\n\\n      <hr style=\\\"margin-top:10px;margin-bottom:10px;\\\">\\n      <div class=\\\"form-group\\\">\\n        <div style=\\\"font-size:85%\\\">\\n          Don't have an account!\\n          <a [routerLink]=\\\"['/register']\\\">\\n            Sign Up Here\\n          </a>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../_service/index';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {User} from \"../_models/index\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private authenticationService: AuthenticationService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.authenticationService.logout();\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  login(user: User) {\n    this.authenticationService.login(user)\n      .subscribe(\n        data => {\n          this.loginForm.reset();\n          this.router.navigate(['/home']);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/login/login.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/register/register.component.css\n// module id = ../../../../../src/app/register/register.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-top:30px\\\">\\n  <div class=\\\"col-md-10 col-md-offset-1\\\">\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\"><h3 class=\\\"panel-title\\\"><strong>Register</strong></h3></div>\\n\\n      <div class=\\\"panel-body\\\">\\n        <form [formGroup]=\\\"registerForm\\\">\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"!registerForm.hasError('clean') && registerForm.invalid\\\">\\n            <li *ngIf=\\\"registerForm.controls['firstName'].dirty && registerForm.controls['firstName'].invalid\\\">\\n              First name is required!\\n            </li>\\n            <li *ngIf=\\\"registerForm.controls['lastName'].dirty && registerForm.controls['lastName'].invalid\\\">\\n              Last name is required!\\n            </li>\\n            <li *ngIf=\\\"registerForm.controls['username'].dirty && registerForm.controls['username'].invalid\\\">\\n              Length of username should between 3 and 10!\\n            </li>\\n            <li *ngIf=\\\"registerForm.controls['email'].dirty && registerForm.controls['email'].hasError('email')\\\">\\n              Email format wrong!\\n            </li>\\n            <li *ngIf=\\\"registerForm.controls['password'].dirty && registerForm.controls['password'].invalid\\\">\\n              Password is required!\\n            </li>\\n            <li *ngIf=\\\"registerForm.controls['confirmedPassword'].dirty && registerForm.hasError('pswNotMatch')\\\">\\n              Password and confirm password are different!\\n            </li>\\n            <li *ngIf=\\\"error\\\">\\n              First name is required!\\n            </li>\\n          </div>\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\n            {{error}}\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control \\\" placeholder=\\\"Last Name\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control \\\" placeholder=\\\"Username\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control \\\" placeholder=\\\"Email Address\\\">\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control \\\" placeholder=\\\"Password\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"password\\\" formControlName=\\\"confirmedPassword\\\" class=\\\"form-control \\\"\\n                       placeholder=\\\"Confirm Password\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"checkbox\\\" style=\\\"margin-top: 0px;\\\">\\n              <label>\\n                <input type=\\\"checkbox\\\" name=\\\"remember\\\" value=\\\"1\\\"> Remember me\\n              </label>\\n            </div>\\n          </div>\\n          <button (click)=\\\"register(registerForm.value)\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!registerForm.valid\\\">Sign\\n            in\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/webStormSrc/mockeryData/client/src/app/register/register.component.html\n// module id = ../../../../../src/app/register/register.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {UserService} from \"../_service/index\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  error: string;\n\n  constructor(private userService: UserService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n      username: new FormControl('', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(10)])),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required),\n      confirmedPassword: new FormControl('', Validators.required)\n    }, this.formGroupValidator);\n  }\n\n  register(newUser) {\n    delete newUser.confirmedPassword;\n    this.userService.create(newUser)\n      .subscribe(\n        data => {\n          this.registerForm.reset();\n          this.router.navigate(['/login']);\n        },\n        error => {\n          console.log(error);\n          this.error = error._body;\n        });\n  }\n\n  formGroupValidator(formGroup: FormGroup) {\n    let res = {pswNotMatch: false, clean: false};\n    // check password equality\n    if (formGroup.controls['password'].value != formGroup.controls['confirmedPassword'].value) {\n      res.pswNotMatch = true;\n    }\n    // check if all inputs are dirty or not\n    for (let key in formGroup.controls) {\n      if (!formGroup.controls[key].dirty) {\n        res.clean = true;\n        break;\n      }\n    }\n    return (!res.clean && !res.pswNotMatch) ? null : res;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/register/register.component.ts","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {HomeComponent} from \"./home/home.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'home', component: HomeComponent},\r\n  // otherwise redirect to home\r\n  {path: '**', redirectTo: 'home'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class RoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/app/routing.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// D:/webStormSrc/mockeryData/client/src/main.ts"],"sourceRoot":"webpack:///"}