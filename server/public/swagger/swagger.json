{
  "swagger": "2.0",
  "info": {
    "description": "This is an web app to generate mock data.",
    "version": "1.0.0",
    "title": "Mockery Data System"
  },
  "host": "localhost:3000",
  "basePath": "/mockdata/api/v1",
  "schemes": [
    "http"
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user",
        "description": "",
        "operationId": "getUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "csrf_token",
            "in": "header",
            "description": "The verification for a single user in a single session",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "403": {
            "description": "Invalid csrf_token supplied"
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Sign up a new user",
        "description": "",
        "operationId": "signUpUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The new user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid user info supplied"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The user to login.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {
              "csrf_token": {
                "type": "string",
                "description": "csrf token"
              }
            }
          },
          "403": {
            "description": "Bad request"
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Log out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/json"
        ],
        "parameters": [

        ],
        "responses": {
          "default": {
            "description": "successful logout"
          }
        }
      }
    },
    "/schema": {
      "post": {
        "tags": [
          "schema"
        ],
        "summary": "Create a schema",
        "operationId": "createSchema",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "schema",
            "description": "The schema to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful created schema",
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          },
          "400": {
            "description": "Invalid schema supplied"
          }
        }
      },
      "put": {
        "tags": [
          "schema"
        ],
        "summary": "Update a schema",
        "operationId": "updateSchema",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "schema",
            "description": "The schema to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful update schema",
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          },
          "400": {
            "description": "Invalid schema supplied"
          }
        }
      }
    },
    "/generate": {
      "get": {
        "tags": [
          "mock data"
        ],
        "summary": "Generate data by schema",
        "operationId": "generate",
        "produces": [
          "application/json",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "name": "schema",
            "in": "body",
            "description": "Define schema of data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "status": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "DataType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "DataType"
      }
    },
    "Schema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "count": {
          "type": "integer"
        },
        "fileFormat": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "dataType": {
                "$ref": "#/definitions/DataType"
              }
            }
          }
        }
      }
    },
    "MockData": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User"
        },
        "schema": {
          "$ref": "#/definitions/Schema"
        },
        "data": {
          "type": "object"
        }
      },
      "xml": {
        "name": "MockData"
      }
    }
  }
}